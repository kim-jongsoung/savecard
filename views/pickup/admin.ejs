<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>공항 픽업 관리</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .date-warning { background: #fff3cd; border-left: 4px solid #ff6b6b; }
    .early-morning { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; }
    .pickup-card { margin-bottom: 15px; padding: 15px; border: 2px solid #ddd; border-radius: 8px; }
    .calendar-grid { display: grid; grid-template-columns: repeat(7, 1fr); gap: 8px; }
    .calendar-day { border: 1px solid #ddd; padding: 8px; border-radius: 8px; min-height: 200px; max-height: 200px; overflow-y: auto; }
    .calendar-day.has-pickup { background: #fafafa; border-color: #2196f3; border-width: 2px; }
    .calendar-day.today { background: #fff3cd; border-color: #ff9800; font-weight: bold; border-width: 2px; }
    .calendar-header { font-weight: bold; text-align: center; padding: 10px; background: #667eea; color: white; border-radius: 4px; }
    .calendar-date { font-size: 16px; font-weight: bold; margin-bottom: 5px; position: sticky; top: 0; background: white; z-index: 10; padding: 3px 0; }
    .pickup-item { font-size: 11px; padding: 4px 6px; margin: 3px 0; border-radius: 4px; cursor: pointer; border-left: 3px solid; transition: all 0.2s; }
    .pickup-item:hover { transform: translateX(3px); box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    .pickup-arrival { background: #e3f2fd; border-left-color: #2196f3; color: #1565c0; }
    .pickup-departure { background: #fce4ec; border-left-color: #e91e63; color: #c2185b; }
    .pickup-early { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-left-color: #fbbf24; color: white; }
    .day-summary { font-size: 10px; color: #666; margin-bottom: 5px; padding: 2px 4px; background: #f0f0f0; border-radius: 3px; }
  </style>
</head>
<body>
  <div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h2>🚗 공항 픽업 관리</h2>
      <div>
        <button class="btn btn-outline-secondary me-2" onclick="location.href='/pickup/agencies'">🏢 업체 관리</button>
        <button class="btn btn-success" onclick="showAddModal()">+ 새 예약 등록</button>
      </div>
    </div>
    
    <!-- 달력 뷰 (유일한 화면) -->
    <div id="calendarView" class="mb-4">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <button class="btn btn-sm btn-secondary" onclick="changeMonth(-1)">◀ 이전달</button>
        <h4 id="currentMonth"></h4>
        <button class="btn btn-sm btn-secondary" onclick="changeMonth(1)">다음달 ▶</button>
      </div>
      <div id="calendar" class="calendar-grid"></div>
    </div>
  </div>
  
  <!-- 상세 보기 모달 -->
  <div class="modal fade" id="detailModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="detailTitle">예약 상세</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="detailBody">
          <!-- 동적 내용 -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
          <button type="button" class="btn btn-warning" onclick="editFromDetail()">수정</button>
          <button type="button" class="btn btn-danger" onclick="deleteFromDetail()">취소</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 등록 모달 -->
  <div class="modal fade" id="addModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">새 픽업 등록</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="addForm">
            <!-- 픽업 유형 -->
            <div class="mb-3">
              <label class="form-label">픽업 유형</label>
              <select class="form-select" id="pickupType" onchange="toggleFields()">
                <option value="airport_to_hotel">공항 → 호텔 (도착)</option>
                <option value="hotel_to_airport">호텔 → 공항 (출국)</option>
                <option value="roundtrip">왕복</option>
              </select>
            </div>
            
            <!-- 도착 정보 -->
            <div id="arrivalFields">
              <h6 class="text-primary">🇰🇷 한국 출발 (도착 픽업)</h6>
              <div class="row">
                <div class="col-md-4">
                  <label class="form-label">날짜</label>
                  <input type="date" class="form-control" id="krDate" onchange="autoCalculate()">
                </div>
                <div class="col-md-4">
                  <label class="form-label">편명</label>
                  <select class="form-select" id="krFlight" onchange="autoCalculate()">
                    <option value="">선택</option>
                    <option value="KE111">KE111 (07:30)</option>
                    <option value="KE123">KE123 (22:00) ⚠️ 다음날 도착</option>
                    <option value="OZ456">OZ456 (10:00)</option>
                    <option value="OZ789">OZ789 (15:30)</option>
                    <option value="UA873">UA873 (13:20)</option>
                  </select>
                </div>
                <div class="col-md-4">
                  <label class="form-label">시간</label>
                  <input type="text" class="form-control" id="krTime" readonly>
                </div>
              </div>
              <div id="arrivalResult" class="alert alert-info mt-2" style="display:none;"></div>
            </div>
            
            <!-- 출발 정보 -->
            <div id="departureFields" style="display:none;">
              <h6 class="text-danger">🇬🇺 괌 출발 (출국 픽업)</h6>
              <div class="row">
                <div class="col-md-4">
                  <label class="form-label">날짜</label>
                  <input type="date" class="form-control" id="guamDepDate" onchange="autoCalculatePickup()">
                </div>
                <div class="col-md-4">
                  <label class="form-label">편명</label>
                  <select class="form-select" id="depFlight" onchange="autoCalculatePickup()">
                    <option value="">선택</option>
                    <option value="KE124">KE124</option>
                    <option value="OZ458">OZ458</option>
                  </select>
                </div>
                <div class="col-md-4">
                  <label class="form-label">시간</label>
                  <input type="text" class="form-control" id="guamDepTime" readonly>
                </div>
              </div>
              <div id="pickupResult" class="alert alert-warning mt-2" style="display:none;"></div>
            </div>
            
            <hr class="my-3">
            
            <!-- 고객 정보 -->
            <h6>👤 고객 정보</h6>
            <div class="row">
              <div class="col-md-4">
                <label class="form-label">업체</label>
                <select class="form-select" id="agencyId"></select>
              </div>
              <div class="col-md-8">
                <label class="form-label">고객명</label>
                <input type="text" class="form-control" id="customerName" required>
              </div>
            </div>
            <div class="row mt-2">
              <div class="col-md-3">
                <label class="form-label">성인 (Adult)</label>
                <input type="number" class="form-control" id="adultCount" min="0" value="0" onchange="updateTotal()">
              </div>
              <div class="col-md-3">
                <label class="form-label">소아 (Child)</label>
                <input type="number" class="form-control" id="childCount" min="0" value="0" onchange="updateTotal()">
              </div>
              <div class="col-md-3">
                <label class="form-label">유아 (Infant)</label>
                <input type="number" class="form-control" id="infantCount" min="0" value="0" onchange="updateTotal()">
              </div>
              <div class="col-md-3">
                <label class="form-label">짐 (Luggage)</label>
                <input type="number" class="form-control" id="luggageCount" min="0" value="0">
              </div>
            </div>
            <div class="alert alert-info mt-2">
              <strong>총 인원:</strong> <span id="totalPassengers">0</span>명
            </div>
            <div class="row mt-2">
              <div class="col-md-4">
                <label class="form-label">호텔</label>
                <input type="text" class="form-control" id="hotelName" list="hotels" required>
                <datalist id="hotels">
                  <option value="Hilton Hotel">
                  <option value="Hyatt Regency">
                  <option value="PIC Guam">
                  <option value="Marriott Resort">
                  <option value="Dusit Thani">
                </datalist>
              </div>
              <div class="col-md-4">
                <label class="form-label">연락처</label>
                <input type="text" class="form-control" id="phone">
              </div>
              <div class="col-md-4">
                <label class="form-label">카톡ID</label>
                <input type="text" class="form-control" id="kakaoId">
              </div>
            </div>
            <div class="mt-2">
              <label class="form-label">메모</label>
              <textarea class="form-control" id="memo" rows="2"></textarea>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
          <button type="button" class="btn btn-primary" onclick="savePickup()">등록</button>
        </div>
      </div>
    </div>
  </div>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const FLIGHTS = {
      'KE111': { time: '07:30', hours: 4 },
      'KE123': { time: '22:00', hours: 4 },
      'KE124': { time: '01:00', hours: 4 },
      'OZ456': { time: '10:00', hours: 4 },
      'OZ458': { time: '03:30', hours: 4 },
      'OZ789': { time: '15:30', hours: 4 },
      'UA873': { time: '13:20', hours: 4 }
    };
    
    let addModalInstance;
    let detailModalInstance;
    let currentCalendarYear = new Date().getFullYear();
    let currentCalendarMonth = new Date().getMonth() + 1;
    let currentPickupData = null;
    let allPickups = {}; // ID별 예약 데이터 저장
    
    // 페이지 로드
    document.addEventListener('DOMContentLoaded', () => {
      addModalInstance = new bootstrap.Modal(document.getElementById('addModal'));
      detailModalInstance = new bootstrap.Modal(document.getElementById('detailModal'));
      loadAgencies();
      loadCalendar(); // 달력을 기본으로 로드
    });
    
    // 인원 계산
    function updateTotal() {
      const adult = parseInt(document.getElementById('adultCount').value) || 0;
      const child = parseInt(document.getElementById('childCount').value) || 0;
      const infant = parseInt(document.getElementById('infantCount').value) || 0;
      document.getElementById('totalPassengers').textContent = adult + child + infant;
    }
    
    // 업체 목록 로드
    async function loadAgencies() {
      const res = await fetch('/pickup/api/agencies');
      const agencies = await res.json();
      const select = document.getElementById('agencyId');
      select.innerHTML = agencies.map(a => `<option value="${a.id}">${a.agency_name}</option>`).join('');
    }
    
    // 예약 상세 보기 (모달)
    function showPickupDetail(pickupId) {
      const pickup = allPickups[pickupId];
      if (!pickup) return;
      currentPickupData = pickup;
      const isArrival = pickup.guam_arrival_date;
      
      let html = `
        <div class="row">
          <div class="col-md-6">
            <h6>👤 고객 정보</h6>
            <p><strong>이름:</strong> ${pickup.customer_name}</p>
            <p><strong>업체:</strong> ${pickup.agency_name || '-'}</p>
            <p><strong>호텔:</strong> ${pickup.hotel_name}</p>
            <p><strong>전화:</strong> ${pickup.phone || '-'}</p>
            <p><strong>카카오:</strong> ${pickup.kakao_id || '-'}</p>
          </div>
          <div class="col-md-6">
            <h6>👥 인원</h6>
            <p><strong>성인:</strong> ${pickup.adult_count || 0}명</p>
            <p><strong>소아:</strong> ${pickup.child_count || 0}명</p>
            <p><strong>유아:</strong> ${pickup.infant_count || 0}명</p>
            <p><strong>짐:</strong> ${pickup.luggage_count || 0}개</p>
            <p><strong>총 인원:</strong> ${pickup.passenger_count}명</p>
          </div>
        </div>
      `;
      
      if (isArrival) {
        html += `
          <hr>
          <h6>✈️ 공항 픽업 정보</h6>
          <p><strong>한국 출발:</strong> ${pickup.kr_departure_date} ${pickup.kr_departure_time} (${pickup.kr_flight_number})</p>
          <p><strong>괌 도착:</strong> ${pickup.guam_arrival_date} ${pickup.guam_arrival_time}</p>
        `;
      } else {
        html += `
          <hr>
          <h6>🏨 호텔 픽업 정보</h6>
          <p><strong>호텔 픽업:</strong> ${pickup.hotel_pickup_date} ${pickup.hotel_pickup_time}</p>
          <p><strong>출발 비행기:</strong> ${pickup.guam_departure_date} ${pickup.guam_departure_time} (${pickup.departure_flight_number})</p>
          ${pickup.is_early_morning ? '<p class="text-danger"><strong>⚠️ 새벽 비행기 - 전날 밤 픽업</strong></p>' : ''}
        `;
      }
      
      if (pickup.vehicle_type) {
        html += `<p><strong>차량:</strong> ${pickup.vehicle_type}</p>`;
      }
      if (pickup.memo) {
        html += `<p><strong>메모:</strong> ${pickup.memo}</p>`;
      }
      
      document.getElementById('detailBody').innerHTML = html;
      detailModalInstance.show();
    }
    
    function renderArrivalCard(p) {
      return `
        <div class="pickup-card">
          <div class="d-flex justify-content-between">
            <div>
              <strong>✈️ ${p.kr_flight_number || ''} ${p.guam_arrival_time || ''} 도착</strong>
              <span class="badge bg-secondary">${p.agency_name || ''}</span>
              <br>
              <small class="text-muted">한국 ${p.kr_departure_date} ${p.kr_departure_time} 출발</small>
            </div>
            <div>
              <span class="badge bg-info">${p.passenger_count}명</span>
              ${p.adult_count ? `<small>(성인:${p.adult_count} 소아:${p.child_count||0} 유아:${p.infant_count||0} 짐:${p.luggage_count||0})</small>` : ''}
              ${p.vehicle_type ? `<span class="badge bg-success">${p.vehicle_type}</span>` : ''}
            </div>
          </div>
          <div class="mt-2">
            ${p.customer_name} → ${p.hotel_name}
            ${p.memo ? `<br><small>📝 ${p.memo}</small>` : ''}
          </div>
          <div class="mt-2">
            <button class="btn btn-sm btn-warning" onclick="editPickup(${p.id})">수정</button>
            <button class="btn btn-sm btn-danger" onclick="deletePickup(${p.id})">취소</button>
          </div>
        </div>
      `;
    }
    
    function renderDepartureCard(p) {
      const isEarly = p.is_early_morning;
      return `
        <div class="pickup-card ${isEarly ? 'early-morning' : ''}">
          <div class="d-flex justify-content-between">
            <div>
              <strong>⏰ ${p.hotel_pickup_time} 픽업 ${isEarly ? '🌙' : ''}</strong>
              <span class="badge ${isEarly ? 'bg-warning' : 'bg-secondary'}">${p.agency_name || ''}</span>
              <br>
              <small ${isEarly ? '' : 'class="text-muted"'}>비행기: ${p.guam_departure_date} ${p.guam_departure_time} 출발</small>
              ${isEarly ? '<br><small>⚠️ 새벽 비행기 - 전날 밤 픽업</small>' : ''}
            </div>
            <div>
              <span class="badge ${isEarly ? 'bg-light text-dark' : 'bg-info'}">${p.passenger_count}명</span>
              ${p.vehicle_type ? `<span class="badge bg-success">${p.vehicle_type}</span>` : ''}
            </div>
          </div>
          <div class="mt-2">
            ${p.customer_name} ← ${p.hotel_name}
            ${p.memo ? `<br><small>📝 ${p.memo}</small>` : ''}
          </div>
          <div class="mt-2">
            <button class="btn btn-sm btn-warning" onclick="editPickup(${p.id})">수정</button>
            <button class="btn btn-sm btn-danger" onclick="deletePickup(${p.id})">취소</button>
          </div>
        </div>
      `;
    }
    
    // 모달 열기
    function showAddModal() {
      document.getElementById('addForm').reset();
      toggleFields();
      addModalInstance.show();
    }
    
    // 필드 토글
    function toggleFields() {
      const type = document.getElementById('pickupType').value;
      document.getElementById('arrivalFields').style.display = 
        (type === 'airport_to_hotel' || type === 'roundtrip') ? 'block' : 'none';
      document.getElementById('departureFields').style.display = 
        (type === 'hotel_to_airport' || type === 'roundtrip') ? 'block' : 'none';
    }
    
    // 자동 계산 (도착)
    function autoCalculate() {
      const date = document.getElementById('krDate').value;
      const flightNum = document.getElementById('krFlight').value;
      if (!date || !flightNum) return;
      
      const flight = FLIGHTS[flightNum];
      if (!flight) return;
      
      document.getElementById('krTime').value = flight.time;
      
      const krDateTime = new Date(`${date}T${flight.time}:00+09:00`);
      const guamDateTime = new Date(krDateTime);
      guamDateTime.setHours(guamDateTime.getHours() + flight.hours + 1);
      
      const guamDate = guamDateTime.toISOString().split('T')[0];
      const guamTime = guamDateTime.toTimeString().slice(0, 5);
      
      const dateChanged = date !== guamDate;
      
      const result = document.getElementById('arrivalResult');
      result.style.display = 'block';
      result.className = dateChanged ? 'alert alert-warning' : 'alert alert-info';
      result.innerHTML = dateChanged 
        ? `⚠️ 날짜 변경!<br>한국: ${date} ${flight.time} 출발<br>괌: <strong>${guamDate} ${guamTime} 도착</strong>`
        : `괌 도착: ${guamDate} ${guamTime}`;
    }
    
    // 자동 계산 (호텔 픽업)
    function autoCalculatePickup() {
      const date = document.getElementById('guamDepDate').value;
      const flightNum = document.getElementById('depFlight').value;
      if (!date || !flightNum) return;
      
      const flight = FLIGHTS[flightNum];
      if (!flight) return;
      
      document.getElementById('guamDepTime').value = flight.time;
      
      const flightDateTime = new Date(`${date}T${flight.time}:00+10:00`);
      const hour = flightDateTime.getHours();
      
      let pickupDate, pickupTime, isEarly = false;
      
      if (hour >= 0 && hour < 6) {
        // 새벽 비행기
        const prevDay = new Date(flightDateTime);
        prevDay.setDate(prevDay.getDate() - 1);
        pickupDate = prevDay.toISOString().split('T')[0];
        pickupTime = '23:59';
        isEarly = true;
      } else {
        // 정상
        const pickupDateTime = new Date(flightDateTime);
        pickupDateTime.setHours(pickupDateTime.getHours() - 3);
        pickupDate = pickupDateTime.toISOString().split('T')[0];
        pickupTime = pickupDateTime.toTimeString().slice(0, 5);
      }
      
      const result = document.getElementById('pickupResult');
      result.style.display = 'block';
      result.className = isEarly ? 'alert alert-danger' : 'alert alert-info';
      result.innerHTML = isEarly 
        ? `🌙 새벽 비행기 특별 규칙!<br>비행기: ${date} ${flight.time} 출발<br>픽업: <strong>${pickupDate} ${pickupTime}</strong> (전날 밤)`
        : `호텔 픽업: ${pickupDate} ${pickupTime} (3시간 전)`;
    }
    
    // 모달에서 수정
    function editFromDetail() {
      if (!currentPickupData) return;
      detailModalInstance.hide();
      alert('수정 기능은 곧 추가됩니다.');
      // TODO: 수정 모달 열기
    }
    
    // 모달에서 삭제
    async function deleteFromDetail() {
      if (!currentPickupData || !confirm('정말 취소하시겠습니까?')) return;
      
      await fetch(`/pickup/api/${currentPickupData.id}`, { method: 'DELETE' });
      alert('✅ 취소 완료');
      detailModalInstance.hide();
      loadCalendar(); // 달력 새로고침
    }
    
    function changeMonth(delta) {
      currentCalendarMonth += delta;
      if (currentCalendarMonth > 12) {
        currentCalendarMonth = 1;
        currentCalendarYear++;
      } else if (currentCalendarMonth < 1) {
        currentCalendarMonth = 12;
        currentCalendarYear--;
      }
      loadCalendar();
    }
    
    async function loadCalendar() {
      const res = await fetch(`/pickup/api/calendar?year=${currentCalendarYear}&month=${currentCalendarMonth}`);
      const { arrivals, departures } = await res.json();
      
      console.log('📅 달력 데이터:', { arrivals: arrivals.length, departures: departures.length });
      
      // 월 표시
      document.getElementById('currentMonth').textContent = `${currentCalendarYear}년 ${currentCalendarMonth}월`;
      
      // 전역 예약 데이터 초기화
      allPickups = {};
      
      // 날짜별로 예약 그룹화
      const pickupsByDate = {};
      arrivals.forEach(p => {
        const date = p.guam_arrival_date;
        console.log('✈️ 공항픽업 추가:', date, p.customer_name);
        if (!pickupsByDate[date]) pickupsByDate[date] = { arrivals: [], departures: [] };
        pickupsByDate[date].arrivals.push(p);
      });
      departures.forEach(p => {
        const date = p.hotel_pickup_date;
        console.log('🏨 호텔픽업 추가:', date, p.customer_name);
        if (!pickupsByDate[date]) pickupsByDate[date] = { arrivals: [], departures: [] };
        pickupsByDate[date].departures.push(p);
      });
      
      console.log('📋 날짜별 그룹:', Object.keys(pickupsByDate));
      
      // 달력 그리기
      const daysInMonth = new Date(currentCalendarYear, currentCalendarMonth, 0).getDate();
      const firstDay = new Date(currentCalendarYear, currentCalendarMonth - 1, 1).getDay();
      
      let html = '';
      // 요일 헤더
      ['일', '월', '화', '수', '목', '금', '토'].forEach(day => {
        html += `<div class="calendar-header">${day}</div>`;
      });
      
      // 빈 칸
      for (let i = 0; i < firstDay; i++) {
        html += '<div class="calendar-day"></div>';
      }
      
      // 날짜
      const today = new Date().toISOString().split('T')[0];
      for (let day = 1; day <= daysInMonth; day++) {
        const dateStr = `${currentCalendarYear}-${String(currentCalendarMonth).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
        const dayPickups = pickupsByDate[dateStr] || { arrivals: [], departures: [] };
        const hasPickup = dayPickups.arrivals.length > 0 || dayPickups.departures.length > 0;
        const isToday = dateStr === today;
        
        // 통계 계산
        const arrCount = dayPickups.arrivals.length;
        const depCount = dayPickups.departures.length;
        const arrPax = dayPickups.arrivals.reduce((sum, p) => sum + (p.passenger_count || 0), 0);
        const depPax = dayPickups.departures.reduce((sum, p) => sum + (p.passenger_count || 0), 0);
        
        html += `<div class="calendar-day ${hasPickup ? 'has-pickup' : ''} ${isToday ? 'today' : ''}">`;
        html += `<div class="calendar-date">${day}일</div>`;
        
        // 요약
        if (hasPickup) {
          html += `<div class="day-summary">📊 ${arrCount+depCount}건 | ${arrPax+depPax}명</div>`;
        }
        
          // 공항 픽업 목록
        dayPickups.arrivals.forEach(p => {
          allPickups[p.id] = p; // 저장
          const time = p.guam_arrival_time || '';
          html += `
            <div class="pickup-item pickup-arrival" onclick="showPickupDetail(${p.id})">
              🛬 ${time} ${p.customer_name} (${p.passenger_count}명)
            </div>
          `;
        });
        
        // 호텔 픽업 목록
        dayPickups.departures.forEach(p => {
          allPickups[p.id] = p; // 저장
          const earlyClass = p.is_early_morning ? 'pickup-early' : 'pickup-departure';
          const time = p.hotel_pickup_time || '';
          html += `
            <div class="pickup-item ${earlyClass}" onclick="showPickupDetail(${p.id})">
              ${p.is_early_morning ? '🌙' : '🏨'} ${time} ${p.customer_name} (${p.passenger_count}명)
            </div>
          `;
        });
        
        html += `</div>`;
      }
      
      document.getElementById('calendar').innerHTML = html;
    }
    
    // 모달 닫히면 달력 새로고침 (데이터 변경 반영)
    document.getElementById('addModal').addEventListener('hidden.bs.modal', () => {
      loadCalendar();
    });
    
    // 저장
    async function savePickup() {
      const data = {
        pickup_type: document.getElementById('pickupType').value,
        agency_id: document.getElementById('agencyId').value,
        customer_name: document.getElementById('customerName').value,
        hotel_name: document.getElementById('hotelName').value,
        phone: document.getElementById('phone').value,
        kakao_id: document.getElementById('kakaoId').value,
        memo: document.getElementById('memo').value,
        adult_count: parseInt(document.getElementById('adultCount').value) || 0,
        child_count: parseInt(document.getElementById('childCount').value) || 0,
        infant_count: parseInt(document.getElementById('infantCount').value) || 0,
        luggage_count: parseInt(document.getElementById('luggageCount').value) || 0
      };
      
      const type = data.pickup_type;
      
      if (type === 'airport_to_hotel' || type === 'roundtrip') {
        data.kr_departure_date = document.getElementById('krDate').value;
        data.kr_flight_number = document.getElementById('krFlight').value;
      }
      
      if (type === 'hotel_to_airport' || type === 'roundtrip') {
        data.guam_departure_date = document.getElementById('guamDepDate').value;
        data.departure_flight_number = document.getElementById('depFlight').value;
      }
      
      try {
        const res = await fetch('/pickup/api/create', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data)
        });
        
        if (res.ok) {
          alert('✅ 등록 완료!');
          addModalInstance.hide();
          loadCalendar(); // 달력 새로고침
        } else {
          const err = await res.json();
          alert('❌ 오류: ' + err.error);
        }
      } catch (error) {
        alert('❌ 오류: ' + error.message);
      }
    }
    
    // 삭제
    async function deletePickup(id) {
      if (!confirm('정말 취소하시겠습니까?')) return;
      
      await fetch(`/pickup/api/${id}`, { method: 'DELETE' });
      alert('✅ 취소 완료');
      loadPickups();
    }
  </script>
</body>
</html>
