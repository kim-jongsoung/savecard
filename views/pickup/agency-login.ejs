<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Agency Login - HKT Pickup</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Segoe UI', Arial, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 20px;
    }
    
    .login-container {
      background: white;
      border-radius: 20px;
      box-shadow: 0 20px 60px rgba(0,0,0,0.3);
      padding: 50px 40px;
      max-width: 450px;
      width: 100%;
      animation: slideUp 0.5s ease-out;
    }
    
    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .logo {
      text-align: center;
      margin-bottom: 40px;
    }
    
    .logo-icon {
      font-size: 60px;
      margin-bottom: 10px;
    }
    
    .logo h1 {
      color: #667eea;
      font-size: 28px;
      margin-bottom: 5px;
    }
    
    .logo p {
      color: #666;
      font-size: 14px;
    }
    
    .form-group {
      margin-bottom: 25px;
    }
    
    .form-group label {
      display: block;
      color: #333;
      font-weight: 600;
      margin-bottom: 8px;
      font-size: 14px;
    }
    
    .form-group input {
      width: 100%;
      padding: 15px;
      border: 2px solid #e0e0e0;
      border-radius: 10px;
      font-size: 16px;
      transition: all 0.3s;
      text-align: center;
      letter-spacing: 4px;
      font-weight: bold;
    }
    
    .form-group input:focus {
      border-color: #667eea;
      outline: none;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    
    .btn-login {
      width: 100%;
      padding: 15px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      border-radius: 10px;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s;
    }
    
    .btn-login:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
    }
    
    .btn-login:active {
      transform: translateY(0);
    }
    
    .btn-login:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    
    .error-message {
      background: #ffebee;
      color: #c62828;
      padding: 12px;
      border-radius: 8px;
      margin-bottom: 20px;
      font-size: 14px;
      display: none;
      text-align: center;
      animation: shake 0.5s;
    }
    
    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
      20%, 40%, 60%, 80% { transform: translateX(5px); }
    }
    
    .info-box {
      background: #e3f2fd;
      padding: 15px;
      border-radius: 8px;
      margin-top: 25px;
      font-size: 12px;
      color: #1565c0;
      line-height: 1.6;
    }
    
    .info-box strong {
      display: block;
      margin-bottom: 5px;
      font-size: 13px;
    }
    
    .loading {
      display: none;
      text-align: center;
      margin-top: 15px;
      color: #667eea;
      font-size: 14px;
    }
    
    .loading.show {
      display: block;
    }
    
    @media (max-width: 500px) {
      .login-container {
        padding: 40px 25px;
      }
      
      .logo h1 {
        font-size: 24px;
      }
    }
  </style>
</head>
<body>
  <div class="login-container">
    <div class="logo">
      <div class="logo-icon">üöó</div>
      <h1>HKT Pickup</h1>
      <p>Agent Portal</p>
    </div>
    
    <div id="errorMessage" class="error-message"></div>
    
    <form id="loginForm">
      <div class="form-group">
        <label for="agencyCode">üîë Access Code</label>
        <input 
          type="text" 
          id="agencyCode" 
          name="agency_code" 
          placeholder="Enter 4-digit code"
          maxlength="4"
          pattern="[0-9]{4}"
          required
          autocomplete="off">
      </div>
      
      <button type="submit" class="btn-login" id="loginBtn">
        üîì Login
      </button>
      
      <div class="loading" id="loading">
        ‚è≥ Authenticating...
      </div>
    </form>
    
    <div class="info-box">
      <strong>üîí Secure Access</strong>
      Enter your 4-digit agency code to access the booking portal. 
      Contact administrator if you need assistance.
    </div>
  </div>

  <script>
    const form = document.getElementById('loginForm');
    const codeInput = document.getElementById('agencyCode');
    const loginBtn = document.getElementById('loginBtn');
    const loading = document.getElementById('loading');
    const errorMessage = document.getElementById('errorMessage');
    
    // Ïà´ÏûêÎßå ÏûÖÎ†• Í∞ÄÎä•
    codeInput.addEventListener('input', (e) => {
      e.target.value = e.target.value.replace(/[^0-9]/g, '');
    });
    
    // ÏóîÌÑ∞ÌÇ§Î°ú Ï†úÏ∂ú
    codeInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        form.dispatchEvent(new Event('submit'));
      }
    });
    
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const code = codeInput.value.trim();
      
      if (code.length !== 4) {
        showError('Please enter a 4-digit code');
        return;
      }
      
      // UI ÏóÖÎç∞Ïù¥Ìä∏
      loginBtn.disabled = true;
      loading.classList.add('show');
      errorMessage.style.display = 'none';
      
      try {
        const response = await fetch('/pickup/api/agency-login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ agency_code: code })
        });
        
        const data = await response.json();
        
        if (data.success) {
          // Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ
          window.location.href = data.redirectUrl;
        } else {
          // Î°úÍ∑∏Ïù∏ Ïã§Ìå®
          showError(data.message || 'Invalid access code');
          loginBtn.disabled = false;
          loading.classList.remove('show');
        }
      } catch (error) {
        console.error('Login error:', error);
        showError('Connection error. Please try again.');
        loginBtn.disabled = false;
        loading.classList.remove('show');
      }
    });
    
    function showError(message) {
      errorMessage.textContent = '‚ùå ' + message;
      errorMessage.style.display = 'block';
      codeInput.focus();
      codeInput.select();
    }
    
    // ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ìè¨Ïª§Ïä§
    window.addEventListener('load', () => {
      codeInput.focus();
    });
  </script>
</body>
</html>
