<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - 괌세이브카드 관리자</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        * {
            font-family: 'Noto Sans KR', sans-serif;
        }
        
        body {
            background-color: #f8f9fa;
        }
        
        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        }
        
        .search-filters {
            background: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        
        .table-responsive {
            border-radius: 12px;
            overflow: hidden;
        }
        
        .table th {
            background-color: #f8f9fa;
            border: none;
            font-weight: 600;
            color: #495057;
        }
        
        .table td {
            border: none;
            border-bottom: 1px solid #e9ecef;
            vertical-align: middle;
        }
        
        .table tbody tr:hover {
            background-color: #f8f9fa;
            cursor: pointer;
        }
        
        .status-badge {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(255, 193, 7, 0); }
            100% { box-shadow: 0 0 0 0 rgba(255, 193, 7, 0); }
        }
        
        .status-pending { background-color: #6c757d; color: #fff; }
        .status-in-progress { background-color: #ffc107; color: #000; }
        .status-confirmed { background-color: #28a745; color: #fff; }
        .status-voucher-sent { background-color: #17a2b8; color: #fff; }
        .status-settlement-completed { background-color: #6f42c1; color: #fff; }
        .status-payment-completed { background-color: #20c997; color: #fff; }
        .status-cancelled { background-color: #dc3545; color: #fff; }
        .status-refunded { background-color: #fd7e14; color: #fff; }
        
        .btn-primary {
            background: linear-gradient(45deg, #667eea, #764ba2);
            border: none;
            border-radius: 8px;
        }
        
        .modal-header {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
        }
        
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar', { currentPage: 'reservations', adminUsername: adminUsername || 'admin' }) %>

    <div class="container-fluid mt-4">
        <!-- 검색 필터 -->
        <div class="search-filters">
            <h5 class="mb-3"><i class="fas fa-search me-2"></i>예약 검색</h5>
            <div class="row mb-3">
                <div class="col-md-2">
                    <label class="form-label">예약번호</label>
                    <input type="text" class="form-control" id="searchReservationNumber" placeholder="예약번호 검색">
                </div>
                <div class="col-md-2">
                    <label class="form-label">업체명</label>
                    <input type="text" class="form-control" id="searchCompany" placeholder="업체명 검색">
                </div>
                <div class="col-md-2">
                    <label class="form-label">상품명</label>
                    <input type="text" class="form-control" id="searchProduct" placeholder="상품명 검색">
                </div>
                <div class="col-md-2">
                    <label class="form-label">예약자명</label>
                    <input type="text" class="form-control" id="searchCustomer" placeholder="예약자명 검색">
                </div>
                <div class="col-md-2">
                    <label class="form-label">출발일</label>
                    <input type="date" class="form-control" id="searchDepartureDate">
                </div>
                <div class="col-md-2">
                    <label class="form-label">상태</label>
                    <select class="form-select" id="searchStatus">
                        <option value="">전체</option>
                        <option value="pending">대기중 (신규예약)</option>
                        <option value="confirmed">확정 (수배완료)</option>
                        <option value="cancelled">예약취소</option>
                        <option value="refunded">환불완료</option>
                    </select>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-2">
                    <label class="form-label">예약일</label>
                    <input type="date" class="form-control" id="searchBookingDate">
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-12">
                    <button class="btn btn-primary me-2" onclick="searchReservations()">
                        <i class="fas fa-search me-1"></i>검색
                    </button>
                    <button class="btn btn-outline-secondary" onclick="clearSearch()">
                        <i class="fas fa-times me-1"></i>초기화
                    </button>
                </div>
            </div>
        </div>

        <!-- 예약 목록 -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-list me-2"></i>예약 목록</h5>
                <div>
                    <span class="badge bg-primary" id="totalCount">총 0건</span>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>예약번호</th>
                                <th>업체명</th>
                                <th>상품명</th>
                                <th>예약자명</th>
                                <th>출발일</th>
                                <th>예약일</th>
                                <th>상태</th>
                                <th>금액</th>
                            </tr>
                        </thead>
                        <tbody id="reservationsTable">
                            <!-- 데이터가 여기에 로드됩니다 -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- 예약 상세/수정 모달 -->
    <div class="modal fade" id="reservationModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">예약 상세정보</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="reservationForm">
                        <input type="hidden" id="reservationId">
                        
                        <!-- 예약 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-info-circle me-2"></i>예약 정보</h6>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">예약번호</label>
                                <input type="text" class="form-control" id="reservation_number" name="reservation_number">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">업체명</label>
                                <input type="text" class="form-control" id="platform_name" name="platform_name">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">예약 상태</label>
                                <select class="form-control" id="payment_status" name="payment_status">
                                    <option value="pending">대기중 (신규예약)</option>
                                    <option value="confirmed">확정 (수배완료)</option>
                                    <option value="cancelled">예약취소</option>
                                    <option value="refunded">환불완료</option>
                                </select>
                            </div>
                            <div class="col-md-8 mb-3">
                                <label class="form-label">상품명</label>
                                <input type="text" class="form-control" id="product_name" name="product_name">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">패키지 타입 (상품 옵션)</label>
                                <input type="text" class="form-control" id="package_type" name="package_type">
                            </div>
                        </div>

                        <!-- 일정 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-calendar me-2"></i>일정 정보</h6>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">이용일</label>
                                <input type="date" class="form-control" id="tour_date" name="tour_date">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">이용시간</label>
                                <input type="time" class="form-control" id="tour_time" name="tour_time">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">예약일시</label>
                                <input type="datetime-local" class="form-control" id="booking_date" name="booking_date">
                            </div>
                        </div>

                        <!-- 예약자 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-user me-2"></i>예약자 정보</h6>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">한글명</label>
                                <input type="text" class="form-control" id="customer_name" name="customer_name">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">영문 성</label>
                                <input type="text" class="form-control" id="customer_lastname" name="customer_lastname">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">영문 이름</label>
                                <input type="text" class="form-control" id="customer_firstname" name="customer_firstname">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">전화번호</label>
                                <input type="tel" class="form-control" id="customer_phone" name="customer_phone">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">이메일</label>
                                <input type="email" class="form-control" id="customer_email" name="customer_email">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">카카오ID</label>
                                <input type="text" class="form-control" id="kakao_id" name="kakao_id">
                            </div>
                        </div>

                        <!-- 인원 및 금액 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-users me-2"></i>인원 및 금액 정보</h6>
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">성인수</label>
                                <input type="number" class="form-control" id="adult_count" name="adult_count" min="0" value="1">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">아동수</label>
                                <input type="number" class="form-control" id="child_count" name="child_count" min="0" value="0">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">유아수</label>
                                <input type="number" class="form-control" id="infant_count" name="infant_count" min="0" value="0">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">성인 단가($)</label>
                                <input type="number" class="form-control" id="adult_price" name="adult_price" step="0.01" min="0">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">아동 단가($)</label>
                                <input type="number" class="form-control" id="child_price" name="child_price" step="0.01" min="0">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">유아 단가($)</label>
                                <input type="number" class="form-control" id="infant_price" name="infant_price" step="0.01" min="0" value="0">
                            </div>
                            <div class="col-12 mb-3">
                                <label class="form-label">특별 요청사항</label>
                                <textarea class="form-control" id="special_requests" name="special_requests" rows="3"></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="deleteReservation()">
                        <i class="fas fa-trash me-1"></i>삭제
                    </button>
                    <button type="button" class="btn btn-success" id="createAssignmentBtn" onclick="setVendor()" style="display: none;">
                        <i class="fas fa-building me-1"></i>수배업체 설정
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-primary" onclick="saveReservation()">
                        <i class="fas fa-save me-1"></i>저장
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- 수배업체 선택 모달 -->
    <div class="modal fade" id="vendorSelectModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">수배업체 설정</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">상품명</label>
                        <input type="text" class="form-control" id="assignmentProductName" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">수배업체 선택</label>
                        <select class="form-select" id="vendorSelect">
                            <option value="">수배업체를 선택하세요</option>
                        </select>
                        <small class="text-muted">수배업체를 선택하면 예약이 수배중 상태로 변경되고 수배관리 페이지에 표시됩니다.</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                    <button type="button" class="btn btn-success" onclick="confirmCreateAssignment()">
                        <i class="fas fa-check me-1"></i>수배업체 설정
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let reservations = [];
        let filteredReservations = [];

        // 페이지 로드시 예약 데이터 가져오기
        document.addEventListener('DOMContentLoaded', function() {
            loadReservations();
        });

        // 예약 데이터 로드
        async function loadReservations() {
            try {
                const response = await fetch('/api/reservations');
                const data = await response.json();
                reservations = data.reservations || [];
                filteredReservations = [...reservations];
                renderReservations();
            } catch (error) {
                console.error('예약 데이터 로드 실패:', error);
                alert('예약 데이터를 불러오는데 실패했습니다.');
            }
        }

        // 예약 목록 렌더링
        function renderReservations() {
            const tbody = document.getElementById('reservationsTable');
            const totalCount = document.getElementById('totalCount');
            
            totalCount.textContent = `총 ${filteredReservations.length}건`;
            
            if (filteredReservations.length === 0) {
                tbody.innerHTML = '<tr><td colspan="8" class="text-center py-4">검색 결과가 없습니다.</td></tr>';
                return;
            }

            // 상태별 우선순위로 정렬 (대기중이 최상단)
            const sortedReservations = [...filteredReservations].sort((a, b) => {
                const statusPriority = {
                    'pending': 1,    // 대기중 (최우선)
                    'confirmed': 2,  // 확정
                    'cancelled': 3,  // 취소
                    'refunded': 4    // 환불완료
                };
                
                const aPriority = statusPriority[a.payment_status] || 5;
                const bPriority = statusPriority[b.payment_status] || 5;
                
                if (aPriority !== bPriority) {
                    return aPriority - bPriority;
                }
                
                // 같은 상태 내에서는 최신순 (created_at 역순)
                const aDate = new Date(a.created_at || a.reservation_datetime || 0);
                const bDate = new Date(b.created_at || b.reservation_datetime || 0);
                return bDate - aDate;
            });

            tbody.innerHTML = sortedReservations.map(reservation => `
                <tr onclick="openReservationModal(${reservation.id})">
                    <td>${reservation.reservation_number || reservation.id}</td>
                    <td>${reservation.platform_name || '-'}</td>
                    <td>${reservation.product_name || '-'}</td>
                    <td>${reservation.korean_name || '-'}</td>
                    <td>${formatDate(reservation.usage_date)}</td>
                    <td>${formatDate(reservation.reservation_datetime)}</td>
                    <td><span class="status-badge status-${reservation.payment_status || 'pending'}">${getStatusText(reservation.payment_status)}</span></td>
                    <td>${formatCurrency(reservation.total_amount)}</td>
                </tr>
            `).join('');
        }

        // 예약 검색
        function searchReservations() {
            const reservationNumber = document.getElementById('searchReservationNumber').value.toLowerCase();
            const company = document.getElementById('searchCompany').value.toLowerCase();
            const product = document.getElementById('searchProduct').value.toLowerCase();
            const customer = document.getElementById('searchCustomer').value.toLowerCase();
            const departureDate = document.getElementById('searchDepartureDate').value;
            const bookingDate = document.getElementById('searchBookingDate').value;
            const status = document.getElementById('searchStatus').value;

            filteredReservations = reservations.filter(reservation => {
                return (!reservationNumber || (reservation.reservation_number || '').toLowerCase().includes(reservationNumber)) &&
                       (!company || (reservation.platform_name || '').toLowerCase().includes(company)) &&
                       (!product || (reservation.product_name || '').toLowerCase().includes(product)) &&
                       (!customer || (reservation.korean_name || '').toLowerCase().includes(customer)) &&
                       (!departureDate || reservation.usage_date === departureDate) &&
                       (!bookingDate || (reservation.reservation_datetime || '').startsWith(bookingDate)) &&
                       (!status || reservation.payment_status === status);
            });

            renderReservations();
        }

        // 검색 초기화
        function clearSearch() {
            document.getElementById('searchReservationNumber').value = '';
            document.getElementById('searchCompany').value = '';
            document.getElementById('searchProduct').value = '';
            document.getElementById('searchCustomer').value = '';
            document.getElementById('searchDepartureDate').value = '';
            document.getElementById('searchBookingDate').value = '';
            document.getElementById('searchStatus').value = '';
            
            filteredReservations = [...reservations];
            renderReservations();
        }

        // 예약 상세 모달 열기
        function openReservationModal(id) {
            const reservation = reservations.find(r => r.id === id);
            if (!reservation) return;

            // 기본 정보
            document.getElementById('reservationId').value = reservation.id;
            document.getElementById('reservation_number').value = reservation.reservation_number || '';
            document.getElementById('platform_name').value = reservation.platform_name || '';
            document.getElementById('payment_status').value = reservation.payment_status || 'pending';
            document.getElementById('product_name').value = reservation.product_name || '';
            document.getElementById('package_type').value = reservation.package_type || '';
            
            // 일정 정보
            document.getElementById('tour_date').value = reservation.usage_date || '';
            document.getElementById('tour_time').value = reservation.usage_time || '';
            document.getElementById('booking_date').value = reservation.reservation_datetime ? reservation.reservation_datetime.replace(' ', 'T').substring(0, 16) : '';
            
            // 예약자 정보
            document.getElementById('customer_name').value = reservation.korean_name || '';
            document.getElementById('customer_lastname').value = reservation.english_last_name || '';
            document.getElementById('customer_firstname').value = reservation.english_first_name || '';
            document.getElementById('customer_phone').value = reservation.phone || '';
            document.getElementById('customer_email').value = reservation.email || '';
            document.getElementById('kakao_id').value = reservation.kakao_id || '';
            
            // 인원 및 금액 정보
            document.getElementById('adult_count').value = reservation.people_adult || 1;
            document.getElementById('child_count').value = reservation.people_child || 0;
            document.getElementById('infant_count').value = reservation.people_infant || 0;
            document.getElementById('adult_price').value = reservation.adult_unit_price || '';
            document.getElementById('child_price').value = reservation.child_unit_price || '';
            document.getElementById('infant_price').value = reservation.infant_unit_price || 0;
            document.getElementById('special_requests').value = reservation.memo || '';

            // 수배업체 설정 버튼 표시/숨김 (대기중 상태일 때만 표시)
            const createAssignmentBtn = document.getElementById('createAssignmentBtn');
            if (reservation.payment_status === 'pending') {
                createAssignmentBtn.style.display = 'inline-block';
            } else {
                createAssignmentBtn.style.display = 'none';
            }

            new bootstrap.Modal(document.getElementById('reservationModal')).show();
        }

        // 예약 저장
        async function saveReservation() {
            const id = document.getElementById('reservationId').value;
            const data = {
                reservation_number: document.getElementById('reservation_number').value,
                platform_name: document.getElementById('platform_name').value,
                payment_status: document.getElementById('payment_status').value,
                product_name: document.getElementById('product_name').value,
                package_type: document.getElementById('package_type').value,
                usage_date: document.getElementById('tour_date').value,
                usage_time: document.getElementById('tour_time').value,
                reservation_datetime: document.getElementById('booking_date').value.replace('T', ' '),
                korean_name: document.getElementById('customer_name').value,
                english_last_name: document.getElementById('customer_lastname').value,
                english_first_name: document.getElementById('customer_firstname').value,
                phone: document.getElementById('customer_phone').value,
                email: document.getElementById('customer_email').value,
                kakao_id: document.getElementById('kakao_id').value,
                people_adult: parseInt(document.getElementById('adult_count').value) || 1,
                people_child: parseInt(document.getElementById('child_count').value) || 0,
                people_infant: parseInt(document.getElementById('infant_count').value) || 0,
                adult_unit_price: parseFloat(document.getElementById('adult_price').value) || null,
                child_unit_price: parseFloat(document.getElementById('child_price').value) || null,
                infant_unit_price: parseFloat(document.getElementById('infant_price').value) || 0,
                memo: document.getElementById('special_requests').value
            };

            try {
                const response = await fetch(`/api/reservations/${id}`, {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    alert('예약이 수정되었습니다.');
                    bootstrap.Modal.getInstance(document.getElementById('reservationModal')).hide();
                    loadReservations();
                } else {
                    alert('예약 수정에 실패했습니다.');
                }
            } catch (error) {
                console.error('예약 수정 실패:', error);
                alert('예약 수정 중 오류가 발생했습니다.');
            }
        }

        // 예약 삭제
        async function deleteReservation() {
            if (!confirm('정말로 이 예약을 삭제하시겠습니까?')) return;

            const id = document.getElementById('reservationId').value;

            try {
                const response = await fetch(`/api/reservations/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    alert('예약이 삭제되었습니다.');
                    bootstrap.Modal.getInstance(document.getElementById('reservationModal')).hide();
                    loadReservations();
                } else {
                    alert('예약 삭제에 실패했습니다.');
                }
            } catch (error) {
                console.error('예약 삭제 실패:', error);
                alert('예약 삭제 중 오류가 발생했습니다.');
            }
        }

        // 유틸리티 함수들
        function formatDate(dateString) {
            if (!dateString) return '-';
            return new Date(dateString).toLocaleDateString('ko-KR');
        }

        function formatCurrency(amount) {
            if (!amount) return '-';
            return new Intl.NumberFormat('ko-KR', { style: 'currency', currency: 'KRW' }).format(amount);
        }

        function getStatusClass(status) {
            const classMap = {
                'pending': 'pending',
                'in_progress': 'in-progress',
                'confirmed': 'confirmed',
                'voucher_sent': 'voucher-sent',
                'settlement_completed': 'settlement-completed',
                'payment_completed': 'payment-completed',
                'cancelled': 'cancelled',
                'refunded': 'refunded'
            };
            return classMap[status] || 'pending';
        }

        // 수배업체 설정 버튼 클릭
        async function setVendor() {
            const reservationId = document.getElementById('reservationId').value;
            const productName = document.getElementById('product_name').value;
            
            if (!productName) {
                alert('상품명이 필요합니다.');
                return;
            }
            
            // 상품명 설정
            document.getElementById('assignmentProductName').value = productName;
            
            // 수배업체 목록 로드
            await loadVendors();
            
            // 수배업체 선택 모달 열기
            new bootstrap.Modal(document.getElementById('vendorSelectModal')).show();
        }
        
        // 수배업체 목록 로드
        async function loadVendors() {
            try {
                const response = await fetch('/api/vendors');
                const data = await response.json();
                
                const vendorSelect = document.getElementById('vendorSelect');
                vendorSelect.innerHTML = '<option value="">수배업체를 선택하세요</option>';
                
                if (data.success && data.vendors) {
                    data.vendors.forEach(vendor => {
                        const option = document.createElement('option');
                        option.value = vendor.id;
                        option.textContent = `${vendor.vendor_name} (${vendor.business_type || '일반'})`;
                        vendorSelect.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('수배업체 목록 로드 실패:', error);
                alert('수배업체 목록을 불러오는데 실패했습니다.');
            }
        }
        
        // 수배업체 설정 확인
        async function confirmCreateAssignment() {
            const reservationId = document.getElementById('reservationId').value;
            const vendorId = document.getElementById('vendorSelect').value;
            const notes = document.getElementById('assignmentNotes').value;
            
            if (!vendorId) {
                alert('수배업체를 선택해주세요.');
                return;
            }
            
            try {
                // 수배서 생성 (토큰 생성, 전송은 안함)
                const response = await fetch('/api/assignments', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        reservation_id: reservationId,
                        vendor_id: vendorId,
                        notes: notes || '예약관리에서 수배업체 설정',
                        status: 'draft'  // 임시 상태 (전송 안됨)
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('수배업체가 설정되었습니다. 수배관리 페이지에서 수배서를 전송할 수 있습니다.');
                    
                    // 모달들 닫기
                    bootstrap.Modal.getInstance(document.getElementById('vendorSelectModal')).hide();
                    bootstrap.Modal.getInstance(document.getElementById('reservationModal')).hide();
                    
                    // 예약 목록 새로고침
                    loadReservations();
                    
                    // 수배관리 페이지로 이동할지 묻기
                    if (confirm('수배관리 페이지로 이동하시겠습니까?')) {
                        window.location.href = '/admin/assignments';
                    }
                } else {
                    alert(result.message || '수배업체 설정에 실패했습니다.');
                }
            } catch (error) {
                console.error('수배업체 설정 실패:', error);
                alert('수배업체 설정 중 오류가 발생했습니다.');
            }
        }

        // 상태 텍스트 변환 함수
        function getStatusText(status) {
            const statusMap = {
                'pending': '대기중 (신규예약)',
                'in_progress': '수배중 (현지수배)',
                'confirmed': '확정 (수배완료)',
                'cancelled': '예약취소',
                'refunded': '환불완료'
            };
            return statusMap[status] || '대기중';
        }

        // 날짜 포맷 함수
        function formatDate(dateString) {
            if (!dateString) return '-';
            const date = new Date(dateString);
            if (isNaN(date.getTime())) return '-';
            return date.toLocaleDateString('ko-KR') + ' ' + date.toLocaleTimeString('ko-KR', {hour: '2-digit', minute: '2-digit'});
        }

        // 통화 포맷 함수
        function formatCurrency(amount) {
            if (!amount) return '$0';
            return '$' + parseFloat(amount).toLocaleString();
        }

        // 예약을 수배중으로 전환
        async function assignReservation() {
            if (!confirm('이 예약을 수배중 상태로 전환하시겠습니까?\n\n전환 후 수배관리 페이지에서 관리됩니다.')) return;
            
            const id = document.getElementById('reservationId').value;

            try {
                const response = await fetch(`/api/reservations/${id}/assign`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        vendor_name: '',
                        notes: '예약관리에서 수배 전환'
                    })
                });

                const result = await response.json();

                if (result.success) {
                    alert('예약이 수배중 상태로 전환되었습니다.\n수배관리 페이지로 이동합니다.');
                    bootstrap.Modal.getInstance(document.getElementById('reservationModal')).hide();
                    loadReservations(); // 예약관리 목록 새로고침 (해당 예약은 사라짐)
                    
                    // 수배관리 페이지로 이동
                    window.location.href = '/admin/assignments';
                } else {
                    alert(result.message || '수배 전환에 실패했습니다.');
                }
            } catch (error) {
                console.error('수배 전환 오류:', error);
                alert('수배 전환 중 오류가 발생했습니다.');
            }
        }

        // 실시간 검색 (입력시마다 검색)
        document.getElementById('searchReservationNumber').addEventListener('input', searchReservations);
        document.getElementById('searchCompany').addEventListener('input', searchReservations);
        document.getElementById('searchProduct').addEventListener('input', searchReservations);
        document.getElementById('searchCustomer').addEventListener('input', searchReservations);
        document.getElementById('searchDepartureDate').addEventListener('change', searchReservations);
        document.getElementById('searchBookingDate').addEventListener('change', searchReservations);
        document.getElementById('searchStatus').addEventListener('change', searchReservations);
    </script>
</body>
</html>
