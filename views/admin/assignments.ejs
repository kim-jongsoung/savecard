<!doctype html>
<html lang="ko">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>수배관리 - 괌세이브카드 관리자</title>
    <!-- Bootstrap 5 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body { background:#f7f7f9; }
        .page-header { position: sticky; top: 0; z-index: 10; background:#fff; border-bottom:1px solid #eee; }
        .status-badge { font-weight:600; }
        .row-card { background:#fff; border:1px solid #ececf1; border-radius:12px; padding:14px 16px; margin-bottom:10px; display:flex; align-items:center; gap:12px; cursor:pointer; transition: all 0.2s ease; }
        .row-card:hover { box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
        .row-main { display:flex; flex-wrap:wrap; gap:10px; align-items:center; flex:1; }
        .row-main > .chip { background:#f1f3f5; border-radius:999px; padding:4px 10px; font-size:0.9rem; }
        .row-main .dim { color:#6c757d; }
        .money { font-weight:700; }
        .btn-manage { margin-left:auto; }
        .row-card .btn-group { flex-shrink: 0; }
        .toolbar { display:flex; gap:8px; }
        .table-like { font-size:0.95rem; }
        .form-note { font-size:.85rem; color:#6c757d; }
        .divider { height:1px; background:#eee; margin:12px 0; }
        .tab-pane { padding-top:12px; }
        .copy-btn { white-space:nowrap; }
        
        /* 상태별 배지 색상 */
        .status-pending { background-color: #6c757d !important; }
        .status-in-progress { background-color: #ffc107 !important; color: #000 !important; }
        .status-confirmed { background-color: #28a745 !important; }
        .status-voucher-sent { background-color: #17a2b8 !important; }
        .status-cancelled { background-color: #dc3545 !important; }
        .status-refunded { background-color: #6f42c1 !important; }
    </style>
</head>
<body>
    <%- include('../partials/navbar', { currentPage: 'assignments' }) %>
    
    <header class="page-header py-3">
        <div class="container d-flex align-items-center justify-content-between">
            <h1 class="h4 m-0">수배관리</h1>
            <div class="toolbar">
                <button class="btn btn-outline-secondary btn-sm" onclick="toggleFilters()">
                    <i class="bi bi-funnel me-1"></i>필터
                </button>
                <button class="btn btn-outline-secondary btn-sm" onclick="loadAssignments()">
                    <i class="bi bi-arrow-repeat me-1"></i>새로고침
                </button>
            </div>
        </div>
    </header>

    <main class="container my-3">
        <!-- 필터 패널 (숨김/표시) -->
        <div id="filterPanel" class="card mb-3" style="display: none;">
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-2">
                        <label class="form-label">업체명</label>
                        <input type="text" class="form-control" id="searchCompany" placeholder="업체명 검색">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">상품명</label>
                        <input type="text" class="form-control" id="searchProduct" placeholder="상품명 검색">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">예약자명</label>
                        <input type="text" class="form-control" id="searchCustomer" placeholder="예약자명 검색">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">출발일</label>
                        <input type="date" class="form-control" id="searchDepartureDate">
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">예약상태</label>
                        <select class="form-select" id="searchStatus">
                            <option value="">전체</option>
                            <option value="in_progress">수배중</option>
                            <option value="confirmed">확정</option>
                            <option value="voucher_sent">바우처전송완료</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label class="form-label">수배업체</label>
                        <input type="text" class="form-control" id="searchVendor" placeholder="수배업체 검색">
                    </div>
                </div>
                <div class="mt-3">
                    <button class="btn btn-primary me-2" onclick="searchAssignments()">
                        <i class="bi bi-search me-1"></i>검색
                    </button>
                    <button class="btn btn-outline-secondary" onclick="clearSearch()">
                        <i class="bi bi-x me-1"></i>초기화
                    </button>
                </div>
            </div>
        </div>

        <!-- 압축 가로 리스트 -->
        <div id="assignmentsList">
            <!-- 데이터가 여기에 로드됩니다 -->
        </div>

        <!-- 로딩 상태 -->
        <div id="loadingState" class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">로딩 중...</span>
            </div>
            <div class="mt-2">수배 목록을 불러오는 중...</div>
        </div>

        <!-- 빈 상태 -->
        <div id="emptyState" class="text-center py-5" style="display: none;">
            <i class="bi bi-inbox display-1 text-muted"></i>
            <h5 class="text-muted mt-3">수배 중인 예약이 없습니다</h5>
            <p class="text-muted">예약관리에서 수배서를 생성하면 여기에 표시됩니다.</p>
        </div>
    </main>

    <!-- 관리 모달 -->
    <div class="modal fade" id="manageModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="w-100">
                        <div class="d-flex align-items-center justify-content-between">
                            <h2 class="h5 mb-1">수배관리 상세</h2>
                            <span class="badge rounded-pill bg-secondary" id="m-status">상태</span>
                        </div>
                        <div class="small text-muted" id="m-brief">예약 요약</div>
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="닫기"></button>
                </div>
                <div class="modal-body">
                    <!-- Header info grid -->
                    <section class="mb-3">
                        <div class="row g-2">
                            <div class="col-md-2">
                                <div class="form-label">예약번호</div>
                                <div id="m-id" class="fw-semibold">-</div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-label">업체명</div>
                                <div id="m-vendor">-</div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-label">예약자명</div>
                                <div id="m-guest">-</div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-label">상품명</div>
                                <div id="m-product">-</div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-label">출발일 / 사용일자</div>
                                <div id="m-dates">-</div>
                            </div>
                        </div>
                        <div class="row g-2 mt-1">
                            <div class="col-md-3">
                                <div class="form-label">인원</div>
                                <div id="m-pax">-</div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-label">수배업체</div>
                                <div id="m-handler">-</div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-label">총 금액</div>
                                <div id="m-amount" class="fw-semibold">-</div>
                            </div>
                        </div>
                    </section>

                    <ul class="nav nav-tabs" id="manageTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="tab-edit" data-bs-toggle="tab" data-bs-target="#pane-edit" type="button" role="tab">예약변경</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="tab-order" data-bs-toggle="tab" data-bs-target="#pane-order" type="button" role="tab">수배서관리</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="tab-status" data-bs-toggle="tab" data-bs-target="#pane-status" type="button" role="tab">상태/컨펌관리</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="tab-voucher" data-bs-toggle="tab" data-bs-target="#pane-voucher" type="button" role="tab">바우처관리</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="tab-billing" data-bs-toggle="tab" data-bs-target="#pane-billing" type="button" role="tab">정산이관</button>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <!-- 예약변경 -->
                        <div class="tab-pane fade show active" id="pane-edit" role="tabpanel">
                            <div class="row g-3 mt-2">
                                <div class="col-md-3"><label class="form-label">예약자명</label><input type="text" class="form-control" id="f-guest"></div>
                                <div class="col-md-3"><label class="form-label">성인</label><input type="number" min="0" class="form-control" id="f-adult"></div>
                                <div class="col-md-3"><label class="form-label">아동</label><input type="number" min="0" class="form-control" id="f-child"></div>
                                <div class="col-md-3"><label class="form-label">출발일</label><input type="date" class="form-control" id="f-dep"></div>
                                <div class="col-md-6"><label class="form-label">상품명</label><input type="text" class="form-control" id="f-product"></div>
                                <div class="col-md-6"><label class="form-label">수배업체</label><input type="text" class="form-control" id="f-handler"></div>
                            </div>
                            <div class="mt-3 d-flex gap-2">
                                <button class="btn btn-outline-primary" onclick="saveReservationChanges()"><i class="bi bi-save me-1"></i>변경 내용 저장</button>
                                <span class="form-note">※ 이 탭에서의 변경은 실제 예약 데이터(수배내역)에 반영됩니다.</span>
                            </div>
                        </div>

                        <!-- 수배서관리 -->
                        <div class="tab-pane fade" id="pane-order" role="tabpanel">
                            <div class="mt-3 d-flex flex-wrap gap-2">
                                <button class="btn btn-secondary" onclick="previewAssignment()"><i class="bi bi-eye me-1"></i>수배서 미리보기</button>
                                <button class="btn btn-outline-secondary" onclick="editAssignment()"><i class="bi bi-pencil-square me-1"></i>수배서 수정</button>
                                <div class="btn-group">
                                    <button class="btn btn-primary" onclick="sendAssignment()"><i class="bi bi-send me-1"></i>수배서 전송</button>
                                    <button class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false"></button>
                                    <ul class="dropdown-menu">
                                        <li><a class="dropdown-item" href="#" onclick="sendAssignmentEmail()">이메일로 전송</a></li>
                                        <li><a class="dropdown-item" href="#" onclick="sendAssignmentKakao()">카카오톡으로 전송</a></li>
                                    </ul>
                                </div>
                                <button class="btn btn-outline-primary" onclick="downloadAssignment()"><i class="bi bi-download me-1"></i>수배서 저장 (PDF/이미지)</button>
                            </div>
                            <div class="divider"></div>
                            <div class="text-muted small">마지막 전송일시: <span id="order-sent-at">-</span></div>
                        </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-file-alt me-1"></i>수배서 관리</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="d-grid gap-2">
                                                <button class="btn btn-outline-primary" onclick="previewAssignment()">
                                                    <i class="fas fa-eye me-1"></i>수배서 미리보기
                                                </button>
                                                <button class="btn btn-outline-secondary" onclick="editAssignment()">
                                                    <i class="fas fa-edit me-1"></i>수배서 수정
                                                </button>
                                                <button class="btn btn-success" onclick="sendAssignment()">
                                                    <i class="fas fa-paper-plane me-1"></i>수배서 전송
                                                </button>
                                                <button class="btn btn-outline-info" onclick="downloadAssignment()">
                                                    <i class="fas fa-download me-1"></i>수배서 저장 (PDF)
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-history me-1"></i>수배서 전송 이력</h6>
                                        </div>
                                        <div class="card-body">
                                            <div id="assignmentHistory">
                                                <!-- 전송 이력이 여기에 표시됩니다 -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- 상태/컨펌관리 탭 -->
                        <div class="tab-pane fade" id="status-confirm" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-check-circle me-1"></i>상태 관리</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <label class="form-label">예약상태 변경</label>
                                                <select class="form-select" id="statusChange">
                                                    <option value="in_progress">수배중 (현지수배)</option>
                                                    <option value="confirmed">확정 (수배완료)</option>
                                                    <option value="voucher_sent">바우처전송완료</option>
                                                    <option value="cancelled">예약취소</option>
                                                </select>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">확정번호</label>
                                                <input type="text" class="form-control" id="confirmationNumber" placeholder="확정번호 입력">
                                            </div>
                                            <button class="btn btn-primary" onclick="updateStatus()">
                                                <i class="fas fa-save me-1"></i>상태 변경 저장
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-history me-1"></i>상태 변경 로그</h6>
                                        </div>
                                        <div class="card-body">
                                            <div id="statusHistory">
                                                <!-- 상태 변경 이력이 여기에 표시됩니다 -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- 바우처관리 탭 -->
                        <div class="tab-pane fade" id="voucher-management" role="tabpanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-ticket-alt me-1"></i>바우처 관리</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="d-grid gap-2">
                                                <button class="btn btn-primary" onclick="generateVoucher()">
                                                    <i class="fas fa-plus me-1"></i>바우처 페이지 생성
                                                </button>
                                                <button class="btn btn-outline-primary" onclick="previewVoucher()">
                                                    <i class="fas fa-eye me-1"></i>바우처 미리보기
                                                </button>
                                                <button class="btn btn-success" onclick="sendVoucherEmail()">
                                                    <i class="fas fa-envelope me-1"></i>바우처 이메일 전송
                                                </button>
                                                <button class="btn btn-outline-info" onclick="downloadVoucher()">
                                                    <i class="fas fa-download me-1"></i>바우처 저장 (PDF)
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-link me-1"></i>바우처 링크</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <label class="form-label">바우처 URL</label>
                                                <div class="input-group">
                                                    <input type="text" class="form-control" id="voucherUrl" readonly>
                                                    <button class="btn btn-outline-secondary" onclick="copyVoucherUrl()">
                                                        <i class="fas fa-copy"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div id="voucherHistory">
                                                <!-- 바우처 전송 이력 -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- 정산이관 탭 -->
                        <div class="tab-pane fade" id="settlement" role="tabpanel">
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-list-check me-1"></i>정산 이관 체크리스트</h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" type="checkbox" id="checkAmount">
                                                <label class="form-check-label" for="checkAmount">
                                                    금액 확인 완료
                                                </label>
                                            </div>
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" type="checkbox" id="checkConfirmation">
                                                <label class="form-check-label" for="checkConfirmation">
                                                    확정번호 입력 완료
                                                </label>
                                            </div>
                                            <div class="form-check mb-2">
                                                <input class="form-check-input" type="checkbox" id="checkVoucher">
                                                <label class="form-check-label" for="checkVoucher">
                                                    바우처 발송 완료
                                                </label>
                                            </div>
                                            <div class="form-check mb-3">
                                                <input class="form-check-input" type="checkbox" id="checkCustomer">
                                                <label class="form-check-label" for="checkCustomer">
                                                    고객 확인 완료
                                                </label>
                                            </div>
                                            <button class="btn btn-warning btn-lg" onclick="moveToSettlement()" disabled id="settlementBtn">
                                                <i class="fas fa-calculator me-1"></i>정산관리로 이관
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0"><i class="fas fa-sticky-note me-1"></i>내부 메모</h6>
                                        </div>
                                        <div class="card-body">
                                            <textarea class="form-control" id="internalMemo" rows="8" placeholder="내부 메모를 입력하세요..."></textarea>
                                            <button class="btn btn-outline-primary btn-sm mt-2" onclick="saveMemo()">
                                                <i class="fas fa-save me-1"></i>메모 저장
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>닫기
                    </button>
                    <button type="button" class="btn btn-primary" onclick="saveAllChanges()">
                        <i class="fas fa-save me-1"></i>전체 저장
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentPage = 1;
        let currentStatus = '';
        let currentSearch = '';

        // 페이지 로드 시 초기화
        document.addEventListener('DOMContentLoaded', function() {
            loadAssignments();
        });

        // 수배 목록 로드
        async function loadAssignments(page = 1) {
            try {
                currentPage = page;
                const params = new URLSearchParams({
                    page: page,
                    status: currentStatus,
                    search: currentSearch
                });

                const response = await fetch(`/api/assignments?${params}`);
                const data = await response.json();

                console.log('수배관리 API 응답:', data);
                
                if (data.success) {
                    console.log('예약 데이터 샘플:', data.data.assignments[0]);
                    renderAssignments(data.data.assignments);
                } else {
                    console.error('API 오류:', data.message);
                    showAlert('데이터를 불러오는데 실패했습니다: ' + data.message, 'danger');
                }
            } catch (error) {
                console.error('수배 목록 로드 실패:', error);
                showAlert('수배 목록을 불러오는데 실패했습니다.', 'danger');
            }
        }

        // 수배관리 목록 렌더링 (카드 형태)
        function renderAssignments(assignments) {
            const assignmentsList = document.getElementById('assignmentsList');
            const loadingState = document.getElementById('loadingState');
            const emptyState = document.getElementById('emptyState');
            
            // 로딩 상태 숨기기
            loadingState.style.display = 'none';
            
            if (assignments.length === 0) {
                assignmentsList.style.display = 'none';
                emptyState.style.display = 'block';
                return;
            }
            
            emptyState.style.display = 'none';
            assignmentsList.style.display = 'block';

            const html = assignments.map(reservation => {
                console.log('예약 상태 정보:', {
                    id: reservation.id,
                    payment_status: reservation.payment_status,
                    reservation_number: reservation.reservation_number
                });
                
                const statusClass = getStatusClass(reservation.payment_status);
                const statusText = getReservationStatusText(reservation.payment_status);
                const bootstrapClass = getBootstrapStatusClass(reservation.payment_status);
                const amount = reservation.total_price ? parseInt(reservation.total_price).toLocaleString('ko-KR') + '원' : '-';
                const pax = `성인 ${reservation.people_adult || 0}명, 아동 ${reservation.people_child || 0}명`;
                
                console.log('상태 변환 결과:', {
                    original: reservation.payment_status,
                    statusText: statusText,
                    bootstrapClass: bootstrapClass
                });
                
                return `
                    <article class="row-card table-like">
                        <span class="badge bg-${getBootstrapStatusClass(reservation.payment_status)} status-badge">${statusText}</span>
                        <div class="row-main">
                            <span><strong>${reservation.platform_name || '-'}</strong><span class="dim">(${reservation.korean_name || '-'})</span></span>
                            <span class="chip">${reservation.product_name || '-'}</span>
                            <span class="dim"><i class="bi bi-calendar2 me-1"></i>출발일 ${formatDate(reservation.usage_date) || '-'}</span>
                            <span class="dim"><i class="bi bi-building me-1"></i>수배업체: ${reservation.vendor_name || '미지정'}</span>
                            <span class="money"><i class="bi bi-cash-coin me-1"></i>${amount}</span>
                        </div>
                        <div class="btn-group btn-group-sm ms-auto" role="group">
                            <button class="btn btn-outline-secondary" onclick="viewAssignment(${reservation.id})" title="수배서 보기">
                                <i class="bi bi-file-text"></i>
                            </button>
                            <button class="btn btn-outline-info" onclick="viewVoucher(${reservation.id})" title="바우처 보기">
                                <i class="bi bi-ticket-perforated"></i>
                            </button>
                            <button class="btn btn-primary btn-manage" data-bs-toggle="modal" data-bs-target="#manageModal" 
                                    data-resv='${JSON.stringify({
                                        id: reservation.reservation_number || reservation.id,
                                        status: statusText,
                                        vendor: reservation.platform_name || '-',
                                        guest: reservation.korean_name || '-',
                                        product: reservation.product_name || '-',
                                        dep: formatDate(reservation.usage_date) || '-',
                                        use: formatDate(reservation.usage_date) || '-',
                                        pax: {adult: reservation.people_adult || 0, child: reservation.people_child || 0},
                                        amount: reservation.total_price || 0,
                                        handler: reservation.vendor_name || '미지정'
                                    })}' title="관리">
                                <i class="bi bi-gear"></i>
                            </button>
                        </div>
                    </article>
                `;
            }).join('');
            
            assignmentsList.innerHTML = html;
        }

        // 검색 함수
        function searchAssignments() {
            const company = document.getElementById('searchCompany').value;
            const product = document.getElementById('searchProduct').value;
            const customer = document.getElementById('searchCustomer').value;
            const status = document.getElementById('searchStatus').value;
            
            currentStatus = status;
            currentSearch = [company, product, customer].filter(s => s.trim()).join(' ');
            
            loadAssignments(1);
        }

        // 검색 초기화
        function clearSearch() {
            document.getElementById('searchCompany').value = '';
            document.getElementById('searchProduct').value = '';
            document.getElementById('searchCustomer').value = '';
            document.getElementById('searchDepartureDate').value = '';
            document.getElementById('searchStatus').value = '';
            document.getElementById('searchVendor').value = '';
            
            currentStatus = '';
            currentSearch = '';
            
            loadAssignments(1);
        }

        // 필터 토글 함수
        function toggleFilters() {
            const filterPanel = document.getElementById('filterPanel');
            if (filterPanel.style.display === 'none') {
                filterPanel.style.display = 'block';
            } else {
                filterPanel.style.display = 'none';
            }
        }

        // 새로운 디자인용 모달 이벤트 리스너 추가
        document.addEventListener('DOMContentLoaded', function() {
            // 모달 이벤트 리스너
            const manageModal = document.getElementById('manageModal');
            if (manageModal) {
                manageModal.addEventListener('show.bs.modal', function(e) {
                    const btn = e.relatedTarget;
                    const payload = btn?.getAttribute('data-resv');
                    if (!payload) return;
                    
                    try {
                        const r = JSON.parse(payload);
                        document.getElementById('m-status').textContent = r.status || '-';
                        document.getElementById('m-id').textContent = r.id || '-';
                        document.getElementById('m-vendor').textContent = r.vendor || '-';
                        document.getElementById('m-guest').textContent = r.guest || '-';
                        document.getElementById('m-product').textContent = r.product || '-';
                        document.getElementById('m-dates').textContent = (r.dep || '-') + ' / ' + (r.use || '-');
                        const paxText = `성인 ${r.pax?.adult ?? '-'}명, 아동 ${r.pax?.child ?? '-'}명`;
                        document.getElementById('m-pax').textContent = paxText;
                        document.getElementById('m-handler').textContent = r.handler || '-';
                        const amount = (typeof r.amount === 'number') ? r.amount.toLocaleString('ko-KR') + '원' : '-';
                        document.getElementById('m-amount').textContent = amount;
                        document.getElementById('m-brief').textContent = `${r.vendor ?? ''} / ${r.guest ?? ''} / ${r.product ?? ''}`.trim();

                        // 예약변경 탭 초기값
                        document.getElementById('f-guest').value = r.guest || '';
                        document.getElementById('f-adult').value = r.pax?.adult ?? 0;
                        document.getElementById('f-child').value = r.pax?.child ?? 0;
                        document.getElementById('f-dep').value = r.dep || '';
                        document.getElementById('f-product').value = r.product || '';
                        document.getElementById('f-handler').value = r.handler || '';

                        // 상태/컨펌 탭 초기값
                        const statusSelect = document.getElementById('f-status');
                        if (statusSelect) statusSelect.value = r.status || '수배중(현지수배)';
                        
                        const confirmInput = document.getElementById('f-confirm');
                        if (confirmInput) confirmInput.value = r.confirmNo || '';

                    } catch (err) {
                        console.warn('예약 데이터 파싱 오류', err);
                    }
                });
            }
        });

        // 예약 변경사항 저장
        function saveReservationChanges() {
            showAlert('예약 변경사항이 저장되었습니다.', 'success');
        }

        // 수배서 미리보기
        function previewAssignment() {
            showAlert('수배서 미리보기 기능은 준비 중입니다.', 'info');
        }

        // 수배서 수정
        function editAssignment() {
            showAlert('수배서 수정 기능은 준비 중입니다.', 'info');
        }

        // 수배서 전송
        function sendAssignment() {
            showAlert('수배서가 전송되었습니다.', 'success');
        }

        // 수배서 이메일 전송
        function sendAssignmentEmail() {
            showAlert('수배서가 이메일로 전송되었습니다.', 'success');
        }

        // 수배서 카카오톡 전송
        function sendAssignmentKakao() {
            showAlert('수배서가 카카오톡으로 전송되었습니다.', 'success');
        }

        // 수배서 다운로드
        function downloadAssignment() {
            showAlert('수배서 다운로드 기능은 준비 중입니다.', 'info');
        }

        // 수배서 보기 (모달)
        function viewAssignment(reservationId) {
            console.log('🔍 수배서 보기 요청:', reservationId);
            
            // 수배서 모달 HTML 생성
            const modalHtml = `
                <div class="modal fade" id="assignmentViewModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title"><i class="bi bi-file-text me-2"></i>수배서 보기</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="text-center" id="loadingSpinner">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">로딩 중...</span>
                                    </div>
                                    <p class="mt-2">수배서를 불러오는 중입니다...</p>
                                </div>
                                <iframe id="assignmentFrame" style="width:100%; height:500px; border:none; display:none;"></iframe>
                                <div id="errorMessage" style="display:none;" class="alert alert-danger">
                                    <h5>수배서 로드 오류</h5>
                                    <p>수배서를 불러올 수 없습니다. 다시 시도해주세요.</p>
                                    <button class="btn btn-primary" onclick="retryLoadAssignment(${reservationId})">다시 시도</button>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                                <button type="button" class="btn btn-primary" onclick="printAssignment()">
                                    <i class="bi bi-printer me-1"></i>인쇄
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // 기존 모달 제거
            const existingModal = document.getElementById('assignmentViewModal');
            if (existingModal) {
                existingModal.remove();
            }
            
            // 새 모달 추가
            document.body.insertAdjacentHTML('beforeend', modalHtml);
            
            // 모달 표시
            const modal = new bootstrap.Modal(document.getElementById('assignmentViewModal'));
            modal.show();
            
            // 수배서 토큰 조회 후 로드
            loadAssignmentByReservationId(reservationId);
        }

        // 예약 ID로 수배서 토큰을 찾아서 로드
        async function loadAssignmentByReservationId(reservationId) {
            try {
                console.log('🔍 수배서 토큰 조회:', reservationId);
                
                // 수배서 토큰 조회
                const response = await fetch(`/api/assignments/by-reservation/${reservationId}`);
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                
                const data = await response.json();
                console.log('✅ 수배서 토큰 조회 성공:', data);
                
                if (data.assignment_token) {
                    loadAssignmentFrame(data.assignment_token);
                } else {
                    throw new Error('수배서 토큰을 찾을 수 없습니다');
                }
                
            } catch (error) {
                console.error('❌ 수배서 토큰 조회 오류:', error);
                showAssignmentError(error.message);
            }
        }

        // 수배서 iframe 로드
        function loadAssignmentFrame(token) {
            const iframe = document.getElementById('assignmentFrame');
            const spinner = document.getElementById('loadingSpinner');
            const errorDiv = document.getElementById('errorMessage');
            
            console.log('🔍 수배서 iframe 로드:', token);
            
            // 임시로 안전한 수배서 페이지 사용
            iframe.src = `/assignment-safe/${token}`;
            
            iframe.onload = () => {
                console.log('✅ 수배서 iframe 로드 완료');
                spinner.style.display = 'none';
                iframe.style.display = 'block';
                errorDiv.style.display = 'none';
            };
            
            iframe.onerror = () => {
                console.error('❌ 수배서 iframe 로드 실패');
                showAssignmentError('수배서 페이지를 불러올 수 없습니다');
            };
            
            // 5초 후에도 로드되지 않으면 오류 표시
            setTimeout(() => {
                if (iframe.style.display === 'none') {
                    console.error('❌ 수배서 로드 타임아웃');
                    showAssignmentError('수배서 로드 시간이 초과되었습니다');
                }
            }, 5000);
        }

        // 수배서 오류 표시
        function showAssignmentError(message) {
            const spinner = document.getElementById('loadingSpinner');
            const errorDiv = document.getElementById('errorMessage');
            const iframe = document.getElementById('assignmentFrame');
            
            spinner.style.display = 'none';
            iframe.style.display = 'none';
            errorDiv.style.display = 'block';
            errorDiv.querySelector('p').textContent = message;
        }

        // 수배서 재시도
        function retryLoadAssignment(reservationId) {
            const spinner = document.getElementById('loadingSpinner');
            const errorDiv = document.getElementById('errorMessage');
            
            spinner.style.display = 'block';
            errorDiv.style.display = 'none';
            
            loadAssignmentByReservationId(reservationId);
        }

        // 바우처 보기 (모달)
        function viewVoucher(reservationId) {
            // 바우처 모달 HTML 생성
            const modalHtml = `
                <div class="modal fade" id="voucherViewModal" tabindex="-1">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title"><i class="bi bi-ticket-perforated me-2"></i>바우처 보기</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="text-center">
                                    <div class="spinner-border" role="status">
                                        <span class="visually-hidden">로딩 중...</span>
                                    </div>
                                    <p class="mt-2">바우처를 불러오는 중입니다...</p>
                                </div>
                                <iframe id="voucherFrame" style="width:100%; height:500px; border:none; display:none;"></iframe>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
                                <button type="button" class="btn btn-primary" onclick="printVoucher()">
                                    <i class="bi bi-printer me-1"></i>인쇄
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // 기존 모달 제거
            const existingModal = document.getElementById('voucherViewModal');
            if (existingModal) {
                existingModal.remove();
            }
            
            // 새 모달 추가
            document.body.insertAdjacentHTML('beforeend', modalHtml);
            
            // 모달 표시
            const modal = new bootstrap.Modal(document.getElementById('voucherViewModal'));
            modal.show();
            
            // 바우처 로드
            setTimeout(() => {
                const iframe = document.getElementById('voucherFrame');
                const spinner = document.querySelector('#voucherViewModal .spinner-border').parentElement;
                
                // 먼저 바우처 토큰을 가져와야 함
                fetch(`/api/reservations/${reservationId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success && data.reservation.voucher_token) {
                            iframe.src = `/voucher/${data.reservation.voucher_token}`;
                            iframe.onload = () => {
                                spinner.style.display = 'none';
                                iframe.style.display = 'block';
                            };
                        } else {
                            spinner.innerHTML = '<p class="text-muted">바우처가 아직 생성되지 않았습니다.</p>';
                        }
                    })
                    .catch(error => {
                        console.error('바우처 로드 오류:', error);
                        spinner.innerHTML = '<p class="text-danger">바우처를 불러오는데 실패했습니다.</p>';
                    });
            }, 500);
        }

        // 수배서 인쇄
        function printAssignment() {
            const iframe = document.getElementById('assignmentFrame');
            if (iframe && iframe.contentWindow) {
                iframe.contentWindow.print();
            }
        }

        // 바우처 인쇄
        function printVoucher() {
            const iframe = document.getElementById('voucherFrame');
            if (iframe && iframe.contentWindow) {
                iframe.contentWindow.print();
            }
        }

        // 유틸리티 함수들
        function getStatusClass(status) {
            const statusMap = {
                'pending': 'pending',
                'in_progress': 'in-progress', 
                'confirmed': 'confirmed',
                'voucher_sent': 'voucher-sent',
                'cancelled': 'cancelled',
                'refunded': 'refunded'
            };
            return statusMap[status] || 'pending';
        }

        function getBootstrapStatusClass(status) {
            const statusMap = {
                'pending': 'secondary',           // 대기중 - 회색
                'in_progress': 'warning',         // 수배중 - 노란색
                'confirmed': 'success',           // 확정 - 초록색
                'voucher_sent': 'primary',        // 바우처전송완료 - 파란색
                'cancelled': 'danger',            // 예약취소 - 빨간색
                'refunded': 'dark'                // 환불완료 - 검은색
            };
            return statusMap[status] || 'secondary';
        }

        function getReservationStatusText(status) {
            const statusMap = {
                'pending': '대기중 (신규예약)',
                'in_progress': '수배중 (현지수배)',
                'confirmed': '확정 (수배완료)',
                'voucher_sent': '바우처전송완료',
                'cancelled': '예약취소',
                'refunded': '환불완료'
            };
            return statusMap[status] || '대기중 (신규예약)';
        }

        function formatDate(dateString) {
            if (!dateString) return '-';
            const date = new Date(dateString);
            if (isNaN(date.getTime())) return '-';
            return date.toLocaleDateString('ko-KR');
        }

        function formatCurrency(amount) {
            if (!amount) return '-';
            return new Intl.NumberFormat('ko-KR', {
                style: 'currency',
                currency: 'USD'
            }).format(amount);
        }

        function showAlert(message, type = 'info') {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
