<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>인박스 - 괌세이브카드 관리자</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&display=swap" rel="stylesheet">
</head>
<body>
    <%- include('../partials/navbar', { currentPage: 'inbox', adminUsername: adminUsername }) %>
    
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h2><i class="fas fa-inbox me-2 text-primary"></i>인박스</h2>
                        <p class="text-muted">파싱·검수·등록을 통합 관리합니다</p>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary" onclick="refreshInbox()">
                            <i class="fas fa-sync-alt me-1"></i>새로고침
                        </button>
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#manualEntryModal">
                            <i class="fas fa-plus me-1"></i>수기 등록
                        </button>
                    </div>
                </div>

                <!-- 여행사 선택 제거 -->

                <!-- 파싱 영역 -->
                <div class="card mb-4">
                    <div class="card-body">
                        <h6><i class="fas fa-paste me-2"></i>예약 데이터 파싱</h6>
                        <form id="parseForm">
                            <div class="mb-3">
                                <textarea class="form-control" id="reservationText" rows="8" 
                                        placeholder="예약 확인서 내용을 붙여넣으세요..."></textarea>
                            </div>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary" onclick="parseReservation()">
                                    <i class="fas fa-robot me-1"></i>AI 파싱
                                </button>
                                <button type="button" class="btn btn-outline-secondary" onclick="clearForm()">
                                    <i class="fas fa-eraser me-1"></i>초기화
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- 파싱 결과 미리보기 영역 -->
                <div id="previewArea" class="card mb-4" style="display: none;">
                    <div class="card-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="mb-0"><i class="fas fa-eye me-2"></i>파싱 결과 미리보기</h6>
                            <div>
                                <span id="confidenceBadge" class="badge"></span>
                                <span id="parsingMethodBadge" class="badge bg-info ms-2"></span>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- 예약 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-info-circle me-2"></i>예약 정보</h6>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">예약번호</label>
                                <input type="text" class="form-control" id="reservation_number" name="reservation_number">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">업체명</label>
                                <input type="text" class="form-control" id="platform_name" name="platform_name">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">결제 상태</label>
                                <select class="form-control" id="payment_status" name="payment_status">
                                    <option value="pending">대기중</option>
                                    <option value="confirmed">확인됨</option>
                                    <option value="cancelled">취소됨</option>
                                </select>
                            </div>
                            <div class="col-md-8 mb-3">
                                <label class="form-label">상품명</label>
                                <input type="text" class="form-control" id="product_name" name="product_name">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">패키지 타입</label>
                                <input type="text" class="form-control" id="package_type" name="package_type" placeholder="예: 개별이동, 단체이동, 픽업포함 등">
                            </div>
                        </div>

                        <!-- 일정 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-calendar me-2"></i>일정 정보</h6>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">이용일</label>
                                <input type="date" class="form-control" id="tour_date" name="tour_date">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">이용시간</label>
                                <input type="time" class="form-control" id="tour_time" name="tour_time">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">예약일시</label>
                                <input type="datetime-local" class="form-control" id="booking_date" name="booking_date">
                            </div>
                        </div>

                        <!-- 예약자 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-user me-2"></i>예약자 정보</h6>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">한글명</label>
                                <input type="text" class="form-control" id="customer_name" name="customer_name">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">영문 성</label>
                                <input type="text" class="form-control" id="customer_lastname" name="customer_lastname">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">영문 이름</label>
                                <input type="text" class="form-control" id="customer_firstname" name="customer_firstname">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label class="form-label">전화번호</label>
                                <input type="tel" class="form-control" id="customer_phone" name="customer_phone">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">이메일</label>
                                <input type="email" class="form-control" id="customer_email" name="customer_email">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">카카오ID</label>
                                <input type="text" class="form-control" id="kakao_id" name="kakao_id">
                            </div>
                        </div>

                        <!-- 인원 및 금액 정보 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-users me-2"></i>인원 및 금액 정보</h6>
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">성인 수</label>
                                <input type="number" class="form-control" id="adult_count" name="adult_count" min="0" onchange="calculateTotal()">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">성인 단가</label>
                                <input type="number" class="form-control" id="adult_price" name="adult_price" min="0" step="0.01" onchange="calculateTotal()">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">아동 수</label>
                                <input type="number" class="form-control" id="child_count" name="child_count" min="0" onchange="calculateTotal()">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">아동 단가</label>
                                <input type="number" class="form-control" id="child_price" name="child_price" min="0" step="0.01" onchange="calculateTotal()">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">유아 수</label>
                                <input type="number" class="form-control" id="infant_count" name="infant_count" min="0" onchange="calculateTotal()">
                            </div>
                            <div class="col-md-2 mb-3">
                                <label class="form-label">유아 단가</label>
                                <input type="number" class="form-control" id="infant_price" name="infant_price" min="0" step="0.01" onchange="calculateTotal()">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">총 인원</label>
                                <input type="number" class="form-control" id="total_guests" name="total_guests" min="0" readonly style="background-color: #f8f9fa;">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">총 금액</label>
                                <input type="number" class="form-control" id="total_amount" name="total_amount" step="0.01" readonly style="background-color: #f8f9fa;">
                            </div>
                            <div class="col-md-4 mb-3">
                                <label class="form-label">계산식</label>
                                <input type="text" class="form-control" id="calculation_formula" readonly style="background-color: #f8f9fa; font-size: 0.9em;">
                            </div>
                        </div>

                        <!-- 메모 섹션 -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary border-bottom pb-2"><i class="fas fa-sticky-note me-2"></i>메모</h6>
                            </div>
                            <div class="col-12 mb-3">
                                <label class="form-label">특이사항 및 요청사항</label>
                                <textarea class="form-control" id="special_requests" name="special_requests" rows="4"></textarea>
                            </div>
                        </div>

                        <!-- 액션 버튼 -->
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-success" onclick="saveReservation()">
                                <i class="fas fa-save me-1"></i>예약 저장
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="editRawData()">
                                <i class="fas fa-edit me-1"></i>다시 수정
                            </button>
                            <button type="button" class="btn btn-outline-danger" onclick="clearPreview()">
                                <i class="fas fa-times me-1"></i>취소
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let parsedData = null;

        // 예약 파싱 (여행사 선택 제거)
        async function parseReservation() {
            const text = document.getElementById('reservationText').value.trim();
            
            if (!text) {
                alert('예약 데이터를 입력해주세요.');
                return;
            }

            try {
                const response = await fetch('/admin/reservations/parse', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ 
                        reservationText: text
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    parsedData = result.parsed_data;
                    showPreview(result);
                } else {
                    alert('파싱 실패: ' + result.message);
                }
            } catch (error) {
                console.error('파싱 오류:', error);
                alert('파싱 중 오류가 발생했습니다.');
            }
        }

        // 미리보기 영역 표시
        function showPreview(result) {
            const previewArea = document.getElementById('previewArea');
            const confidenceBadge = document.getElementById('confidenceBadge');
            const parsingMethodBadge = document.getElementById('parsingMethodBadge');
            
            // 신뢰도 배지
            const confidence = result.confidence || 0.5;
            confidenceBadge.textContent = `신뢰도 ${Math.round(confidence * 100)}%`;
            confidenceBadge.className = confidence > 0.8 ? 'badge bg-success' : 
                                      confidence > 0.6 ? 'badge bg-warning' : 'badge bg-danger';

            // 파싱 방법 배지
            parsingMethodBadge.textContent = result.parsing_method || 'OpenAI';

            // 폼에 데이터 채우기
            fillPreviewForm(parsedData);
            
            previewArea.style.display = 'block';
            previewArea.scrollIntoView({ behavior: 'smooth' });
        }

        // 미리보기 폼에 데이터 채우기
        function fillPreviewForm(data) {
            console.log('📋 파싱된 데이터:', data);
            
            // 업체명 추출 함수 (판매채널/업체명/플랫폼 중 우선순위)
            function extractCompanyName(data) {
                // 우선순위: platform_name > channel > company
                const candidates = [
                    data.platform_name,
                    data.channel, 
                    data.company,
                    data.vendor,
                    data.agency
                ];
                
                for (let name of candidates) {
                    if (name && name.trim() && name !== 'OTHER' && name !== 'UNKNOWN') {
                        // 바스코/럭스파인드 제외
                        const excludeCompanies = ['바스코', 'vasco', 'VASCO', '럭스파인드', 'luxfind', 'LUXFIND'];
                        const lowerName = name.toLowerCase();
                        
                        let isExcluded = false;
                        for (let company of excludeCompanies) {
                            if (lowerName.includes(company.toLowerCase())) {
                                isExcluded = true;
                                break;
                            }
                        }
                        
                        if (!isExcluded) {
                            return name.trim();
                        }
                    }
                }
                return '';
            }
            
            // 날짜 형식 변환 함수
            function formatDate(dateStr) {
                if (!dateStr) return '';
                try {
                    // 다양한 날짜 형식 처리
                    let date = new Date(dateStr);
                    if (isNaN(date.getTime())) {
                        // 한국어 날짜 형식 처리 (예: 2025-09-13)
                        const match = dateStr.match(/(\d{4})-(\d{1,2})-(\d{1,2})/);
                        if (match) {
                            date = new Date(match[1], match[2] - 1, match[3]);
                        }
                    }
                    return date.toISOString().split('T')[0];
                } catch (e) {
                    return '';
                }
            }
            
            // 시간 형식 변환 함수
            function formatTime(timeStr) {
                if (!timeStr) return '';
                try {
                    const match = timeStr.match(/(\d{1,2}):(\d{2})/);
                    if (match) {
                        return `${match[1].padStart(2, '0')}:${match[2]}`;
                    }
                } catch (e) {
                    return '';
                }
                return '';
            }
            
            // 날짜시간 형식 변환 함수
            function formatDateTime(dateTimeStr) {
                if (!dateTimeStr) return '';
                try {
                    const date = new Date(dateTimeStr);
                    if (!isNaN(date.getTime())) {
                        return date.toISOString().slice(0, 16);
                    }
                } catch (e) {
                    return '';
                }
                return '';
            }

            // 모든 필드 매핑 (AI 파서 필드명 → 폼 필드명)
            const fieldMappings = {
                'reservation_number': data.reservation_number || data.booking_reference || data.order_number || '',
                'platform_name': extractCompanyName(data),
                'payment_status': data.payment_status || 'confirmed',
                'product_name': data.product_name || data.tour_name || data.service_name || '',
                'package_type': data.package_type || data.package || data.option || '',
                'tour_date': formatDate(data.usage_date || data.tour_date || data.date || data.service_date || ''),
                'tour_time': formatTime(data.usage_time || data.tour_time || data.time || data.service_time || ''),
                'booking_date': formatDateTime(data.reservation_datetime || data.booking_date || data.created_at || data.reservation_date || ''),
                'customer_name': data.korean_name || data.customer_name || data.name || data.guest_name || '',
                'customer_lastname': data.english_last_name || data.customer_lastname || data.last_name || data.surname || '',
                'customer_firstname': data.english_first_name || data.customer_firstname || data.first_name || data.given_name || '',
                'customer_phone': data.phone || data.customer_phone || data.mobile || data.contact || '',
                'customer_email': data.email || data.customer_email || '',
                'kakao_id': data.kakao_id || data.kakao || data.kakao_talk || data.kakaotalk || '',
                'adult_count': parseInt(data.people_adult || data.adult_count || data.adults || data.adult || 0),
                'child_count': parseInt(data.people_child || data.child_count || data.children || data.child || 0),
                'infant_count': parseInt(data.people_infant || data.infant_count || data.infants || data.infant || 0),
                'adult_price': parseFloat(data.adult_unit_price || data.adult_price || data.adult_amount || 0),
                'child_price': parseFloat(data.child_unit_price || data.child_price || data.child_amount || 0),
                'infant_price': parseFloat(data.infant_price || data.infant_amount || 0),
                'special_requests': data.memo || data.special_requests || data.notes || data.remarks || ''
            };

            // 폼 필드에 값 설정
            Object.entries(fieldMappings).forEach(([fieldId, value]) => {
                const element = document.getElementById(fieldId);
                if (element) {
                    element.value = value || '';
                    
                    // 빈 값이거나 null인 경우 경고 스타일 적용
                    if (!value || value === 'null' || value === '-' || value === 0) {
                        element.classList.add('border-warning');
                        element.style.backgroundColor = '#fff3cd';
                    } else {
                        element.classList.remove('border-warning');
                        element.style.backgroundColor = '';
                    }
                }
            });

            // 총 인원 및 금액 계산
            calculateTotal();
        }

        // 총 인원 및 금액 계산
        function calculateTotal() {
            const adultCount = parseInt(document.getElementById('adult_count').value) || 0;
            const childCount = parseInt(document.getElementById('child_count').value) || 0;
            const infantCount = parseInt(document.getElementById('infant_count').value) || 0;
            
            const adultPrice = parseFloat(document.getElementById('adult_price').value) || 0;
            const childPrice = parseFloat(document.getElementById('child_price').value) || 0;
            const infantPrice = parseFloat(document.getElementById('infant_price').value) || 0;
            
            // 총 인원 계산
            const totalGuests = adultCount + childCount + infantCount;
            document.getElementById('total_guests').value = totalGuests;
            
            // 총 금액 계산
            const adultTotal = adultCount * adultPrice;
            const childTotal = childCount * childPrice;
            const infantTotal = infantCount * infantPrice;
            const totalAmount = adultTotal + childTotal + infantTotal;
            
            document.getElementById('total_amount').value = totalAmount.toFixed(2);
            
            // 계산식 표시
            let formula = [];
            if (adultCount > 0) formula.push(`성인 ${adultCount}명×$${adultPrice}`);
            if (childCount > 0) formula.push(`아동 ${childCount}명×$${childPrice}`);
            if (infantCount > 0) formula.push(`유아 ${infantCount}명×$${infantPrice}`);
            
            const formulaText = formula.length > 0 ? formula.join(' + ') + ` = $${totalAmount.toFixed(2)}` : '';
            document.getElementById('calculation_formula').value = formulaText;
        }

        // 인원 수 및 가격 변경 시 재계산 - 페이지 로드 후 이벤트 리스너 추가
        document.addEventListener('DOMContentLoaded', function() {
            ['adult_count', 'child_count', 'infant_count', 'adult_price', 'child_price', 'infant_price'].forEach(id => {
                const element = document.getElementById(id);
                if (element) {
                    element.addEventListener('input', calculateTotal);
                    element.addEventListener('change', calculateTotal);
                }
            });
        });

        // 예약 저장
        async function saveReservation() {
            if (!parsedData) return;

            // 폼에서 모든 값들 수집
            const formData = {};
            document.querySelectorAll('#previewArea input, #previewArea select, #previewArea textarea').forEach(element => {
                if (element.name) {
                    formData[element.name] = element.value;
                }
            });

            try {
                const response = await fetch('/admin/reservations/save', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ parsedData: formData })
                });

                const result = await response.json();
                
                if (result.success) {
                    alert('예약이 저장되었습니다.');
                    clearForm();
                } else {
                    alert('저장 실패: ' + result.message);
                }
            } catch (error) {
                console.error('저장 오류:', error);
                alert('저장 중 오류가 발생했습니다.');
            }
        }

        // 다시 수정
        function editRawData() {
            document.getElementById('previewArea').style.display = 'none';
            document.getElementById('reservationText').focus();
        }

        // 미리보기 취소
        function clearPreview() {
            document.getElementById('previewArea').style.display = 'none';
            parsedData = null;
        }

        // 폼 초기화
        function clearForm() {
            document.getElementById('reservationText').value = '';
            document.getElementById('previewArea').style.display = 'none';
            parsedData = null;
        }

        // 새로고침
        function refreshInbox() {
            location.reload();
        }
    </script>
</body>
</html>
