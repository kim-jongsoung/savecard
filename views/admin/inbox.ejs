<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>인박스 - 괌세이브카드 관리자</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&display=swap" rel="stylesheet">
</head>
<body>
    <%- include('../partials/navbar', { currentPage: 'inbox', adminUsername: adminUsername }) %>
    
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h2><i class="fas fa-inbox me-2 text-primary"></i>인박스</h2>
                        <p class="text-muted">파싱·검수·등록을 통합 관리합니다</p>
                    </div>
                    <div class="d-flex gap-2">
                        <button class="btn btn-outline-primary" onclick="refreshInbox()">
                            <i class="fas fa-sync-alt me-1"></i>새로고침
                        </button>
                        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#manualEntryModal">
                            <i class="fas fa-plus me-1"></i>수기 등록
                        </button>
                    </div>
                </div>

                <!-- 여행사 선택 영역 -->
                <div class="card mb-4">
                    <div class="card-body">
                        <h6><i class="fas fa-building me-2"></i>여행사 선택</h6>
                        <div class="row g-2" id="agencyButtons">
                            <% if (agencies && agencies.length > 0) { %>
                                <% agencies.forEach(agency => { %>
                                    <div class="col-md-2 col-sm-3 col-4">
                                        <button type="button" class="btn btn-outline-primary agency-btn w-100" 
                                                data-agency-id="<%= agency.id %>"
                                                data-agency-name="<%= agency.name %>"
                                                data-agency-code="<%= agency.code %>">
                                            <div class="text-center">
                                                <i class="fas fa-building mb-1"></i>
                                                <div class="small fw-bold"><%= agency.name %></div>
                                            </div>
                                        </button>
                                    </div>
                                <% }); %>
                            <% } %>
                        </div>
                        <div id="selectedAgencyInfo" class="mt-3" style="display: none;">
                            <div class="alert alert-info">
                                <strong>선택된 여행사:</strong> <span id="selectedAgencyName"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 파싱 영역 -->
                <div class="card mb-4">
                    <div class="card-body">
                        <h6><i class="fas fa-paste me-2"></i>예약 데이터 파싱</h6>
                        <form id="parseForm">
                            <div class="mb-3">
                                <textarea class="form-control" id="reservationText" rows="8" 
                                        placeholder="예약 확인서 내용을 붙여넣으세요..."></textarea>
                            </div>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary" onclick="parseReservation()">
                                    <i class="fas fa-robot me-1"></i>AI 파싱
                                </button>
                                <button type="button" class="btn btn-outline-secondary" onclick="clearForm()">
                                    <i class="fas fa-eraser me-1"></i>초기화
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- 파싱 결과 및 검수 영역 -->
                <div id="reviewArea" class="card mb-4" style="display: none;">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h6><i class="fas fa-search me-2"></i>검수 및 보정</h6>
                            <div>
                                <span id="confidenceBadge" class="badge"></span>
                                <span id="flagsBadge" class="badge bg-warning ms-2" style="display: none;"></span>
                            </div>
                        </div>
                        <div id="reviewForm">
                            <!-- 동적으로 생성될 검수 폼 -->
                        </div>
                        <div class="mt-3">
                            <button type="button" class="btn btn-success" onclick="saveReservation()">
                                <i class="fas fa-save me-1"></i>예약 저장
                            </button>
                            <button type="button" class="btn btn-outline-danger" onclick="rejectReservation()">
                                <i class="fas fa-times me-1"></i>반려
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedAgency = null;
        let parsedData = null;

        // 여행사 선택
        document.querySelectorAll('.agency-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.agency-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                
                selectedAgency = {
                    id: this.dataset.agencyId,
                    name: this.dataset.agencyName,
                    code: this.dataset.agencyCode
                };
                
                document.getElementById('selectedAgencyName').textContent = selectedAgency.name;
                document.getElementById('selectedAgencyInfo').style.display = 'block';
            });
        });

        // 예약 파싱
        async function parseReservation() {
            const text = document.getElementById('reservationText').value.trim();
            
            if (!text) {
                alert('예약 데이터를 입력해주세요.');
                return;
            }
            
            if (!selectedAgency) {
                alert('여행사를 선택해주세요.');
                return;
            }

            try {
                const response = await fetch('/admin/reservations/parse', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ 
                        reservationText: text,
                        selectedAgency: selectedAgency
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    parsedData = result.parsed_data;
                    showReviewArea(result);
                } else {
                    alert('파싱 실패: ' + result.message);
                }
            } catch (error) {
                console.error('파싱 오류:', error);
                alert('파싱 중 오류가 발생했습니다.');
            }
        }

        // 검수 영역 표시
        function showReviewArea(result) {
            const reviewArea = document.getElementById('reviewArea');
            const confidenceBadge = document.getElementById('confidenceBadge');
            
            // 신뢰도 배지
            const confidence = result.confidence || 0.5;
            confidenceBadge.textContent = `신뢰도 ${Math.round(confidence * 100)}%`;
            confidenceBadge.className = confidence > 0.8 ? 'badge bg-success' : 
                                      confidence > 0.6 ? 'badge bg-warning' : 'badge bg-danger';

            // 검수 폼 생성
            generateReviewForm(parsedData);
            
            reviewArea.style.display = 'block';
            reviewArea.scrollIntoView({ behavior: 'smooth' });
        }

        // 검수 폼 생성
        function generateReviewForm(data) {
            const form = document.getElementById('reviewForm');
            const fields = [
                { key: 'customer_name', label: '고객명', type: 'text' },
                { key: 'customer_phone', label: '연락처', type: 'tel' },
                { key: 'customer_email', label: '이메일', type: 'email' },
                { key: 'tour_date', label: '투어 날짜', type: 'date' },
                { key: 'total_amount', label: '총 금액', type: 'number' },
                { key: 'adult_count', label: '성인', type: 'number' },
                { key: 'child_count', label: '아동', type: 'number' }
            ];

            let html = '<div class="row">';
            fields.forEach((field, index) => {
                const value = data[field.key] || '';
                const hasIssue = !value || value === 'null';
                
                html += `
                    <div class="col-md-6 mb-3">
                        <label class="form-label">${field.label} ${hasIssue ? '<span class="text-danger">*</span>' : ''}</label>
                        <input type="${field.type}" class="form-control ${hasIssue ? 'border-warning' : ''}" 
                               id="field_${field.key}" value="${value}" data-field="${field.key}">
                        ${hasIssue ? '<small class="text-warning">확인 필요</small>' : ''}
                    </div>
                `;
            });
            html += '</div>';
            
            form.innerHTML = html;
        }

        // 예약 저장
        async function saveReservation() {
            if (!parsedData) return;

            // 폼에서 수정된 값들 수집
            const formData = {};
            document.querySelectorAll('#reviewForm input').forEach(input => {
                formData[input.dataset.field] = input.value;
            });

            // 파싱된 데이터와 병합
            const finalData = { ...parsedData, ...formData };

            try {
                const response = await fetch('/admin/reservations/save', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ parsedData: finalData })
                });

                const result = await response.json();
                
                if (result.success) {
                    alert('예약이 저장되었습니다.');
                    clearForm();
                } else {
                    alert('저장 실패: ' + result.message);
                }
            } catch (error) {
                console.error('저장 오류:', error);
                alert('저장 중 오류가 발생했습니다.');
            }
        }

        // 폼 초기화
        function clearForm() {
            document.getElementById('reservationText').value = '';
            document.getElementById('reviewArea').style.display = 'none';
            parsedData = null;
        }

        // 새로고침
        function refreshInbox() {
            location.reload();
        }
    </script>
</body>
</html>
